loop20_init:
  fuv = f & ~ _m2p20
FVGS0 = stack_FVGS0
new uuss
uuss = u,uuss[1],0,0
uuss = uuss[0],s,0,0
GSFV0 = FVGS0[1,0]
  grs = g & ~ _m2p20
uuss = uuss[0,0,1,1]
vvrr = vvrr[0,0,1,1]
  fuv += stack_m2p41
_2p30m1x4 = stack_2p30m1x4
uuss0 = uuss & _2p30m1x4
  grs += stack_m2p62
vvrr0 = vvrr & _2p30m1x4 
_2p63x4 = stack_2p63x4
  z = -1
uuss1 = uuss ^ _2p63x4
vvrr1 = vvrr ^ _2p63x4
  oldg = grs
4x uuss1 unsigned>>= 30
4x vvrr1 unsigned>>= 30
  h = grs + fuv
_2p33x4 = stack_2p33x4
4x uuss1 -= _2p33x4
              =? grs & 1
4x vvrr1 -= _2p33x4
4x ta = int32 uuss0 * int32 FVGS0
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV0
4x out0 = ta + tb
  h = grs if  =
minvx4 = 4x stack_minv
mod0 = stack_mod0
  mnew = m + 1
4x d0 = int32 minvx4 * int32 out0
d0 &= _2p30m1x4
4x ta = int32 mod0 * int32 d0
  grs -= fuv
4x out0 += ta
4x carryy = out0 +_2p63x4
  (int64) grs >>= 1
4x carryy unsigned>>= 30
FVGS1 = stack_FVGS1
  (int64) h >>= 1
GSFV1 = FVGS1[1,0]
mod1 = stack_mod1
  m = -m
4x ta = int32 uuss1 * int32 FVGS0
4x tb = int32 vvrr1 * int32 GSFV0
                 signed<? z - 0
4x out1plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS1
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV1
4x out1 = ta + tb
  grs = h    if  signed<
4x out1 += out1plus
4x ta = int32 d0 * int32 mod1
  m = mnew   if  signed<
4x ta += carryy
4x out1 += ta
  z = -1
4x d1 = int32 minvx4 * int32 out1
d1 &= _2p30m1x4
  oldg = grs
4x ta = int32 mod0 * int32 d1
4x out1 += ta
  h = grs + fuv
_2p63m2p33x4 = stack_2p63m2p33x4
4x carryy = out1 + _2p63m2p33x4 
4x carryy unsigned>>= 30
              =? grs & 1
FVGS2 = stack_FVGS2
GSFV2 = FVGS2[1,0]
  z = m   if !=
mod2 = stack_mod2
4x ta = int32 uuss1 * int32 FVGS1
  h = grs if  =
4x tb = int32 vvrr1 * int32 GSFV1
4x out2plus = ta + tb
  mnew = m + 1
4x ta = int32 uuss0 * int32 FVGS2
4x tb = int32 vvrr0 * int32 GSFV2
  grs -= fuv
4x out2 = ta + tb
4x out2 += out2plus
  (int64) grs >>= 1
4x ta = int32 d0 * int32 mod2
4x tb = int32 d1 * int32 mod1
  (int64) h >>= 1
4x out2plus2 = ta + tb
4x out2plus2 += carryy
  m = -m
4x out2 += out2plus2
4x carryy = out2 + _2p63m2p33x4 
                 signed<? z - 0
4x carryy unsigned>>= 30
out2 &= _2p30m1x4
  fuv = oldg if !signed<
stack_FVGS0 = out2
FVGS3 = stack_FVGS3
  grs = h    if  signed<
GSFV3 = FVGS3[1,0]
mod3 = stack_mod3
4x ta = int32 uuss1 * int32 FVGS2
  m = mnew   if  signed<
4x tb = int32 vvrr1 * int32 GSFV2
4x out3plus = ta + tb
  z = -1
4x ta = int32 uuss0 * int32 FVGS3
4x tb = int32 vvrr0 * int32 GSFV3
  oldg = grs
4x out3 = ta + tb
4x out3 += out3plus
  h = grs + fuv
4x ta = int32 d0 * int32 mod3
4x tb = int32 d1 * int32 mod2
              =? grs & 1
4x out3plus2 = ta + tb
4x out3plus2 += carryy
  z = m   if !=
4x out3 += out3plus2
4x carryy = out3 + _2p63m2p33x4 
  h = grs if  =
4x carryy unsigned>>= 30
out3 &= _2p30m1x4
  mnew = m + 1
stack_FVGS1 = out3
FVGS4 = stack_FVGS4
  grs -= fuv
GSFV4 = FVGS4[1,0]
mod4 = stack_mod4
  (int64) grs >>= 1
4x ta = int32 uuss1 * int32 FVGS3
4x tb = int32 vvrr1 * int32 GSFV3
  (int64) h >>= 1
4x out4plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS4
4x tb = int32 vvrr0 * int32 GSFV4
  m = -m
4x out4 = ta + tb
4x out4 += out4plus
                 signed<? z - 0
4x ta = int32 d0 * int32 mod4
4x tb = int32 d1 * int32 mod3
  fuv = oldg if !signed<
4x out4plus2 = ta + tb
4x out4plus2 += carryy
  grs = h    if  signed<
4x out4 += out4plus2
4x carryy = out4 + _2p63m2p33x4 
  m = mnew   if  signed<
4x carryy unsigned>>= 30
out4 &= _2p30m1x4
  z = -1
stack_FVGS2 = out4
FVGS5 = stack_FVGS5
  oldg = grs
GSFV5 = FVGS5[1,0]
mod5 = stack_mod5
  h = grs + fuv
4x ta = int32 uuss1 * int32 FVGS4
4x tb = int32 vvrr1 * int32 GSFV4
              =? grs & 1
4x out5plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS5
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV5
4x out5 = ta + tb
  h = grs if  =
4x out5 += out5plus
4x ta = int32 d0 * int32 mod5
4x tb = int32 d1 * int32 mod4
  mnew = m + 1
4x out5plus2 = ta + tb
4x out5plus2 += carryy
  grs -= fuv
4x out5 += out5plus2
4x carryy = out5 + _2p63m2p33x4 
  (int64) grs >>= 1
4x carryy unsigned>>= 30
out5 &= _2p30m1x4
  (int64) h >>= 1
stack_FVGS3 = out5
FVGS6 = stack_FVGS6
  m = -m
GSFV6 = FVGS6[1,0]
mod6 = stack_mod6
                 signed<? z - 0
4x ta = int32 uuss1 * int32 FVGS5
4x tb = int32 vvrr1 * int32 GSFV5
  fuv = oldg if !signed<
4x out6plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS6
  grs = h    if  signed<
4x tb = int32 vvrr0 * int32 GSFV6
4x out6 = ta + tb
  m = mnew   if  signed<
4x out6 += out6plus
4x ta = int32 d0 * int32 mod6
  z = -1
4x tb = int32 d1 * int32 mod5
4x out6plus2 = ta + tb
  oldg = grs
4x out6plus2 += carryy
4x out6 += out6plus2
4x carryy = out6 + _2p63m2p33x4 
  h = grs + fuv
4x carryy unsigned>>= 30
out6 &= _2p30m1x4
              =? grs & 1
stack_FVGS4 = out6
FVGS7 = stack_FVGS7
  z = m   if !=
GSFV7 = FVGS7[1,0]
mod7 = stack_mod7
  h = grs if  =
4x ta = int32 uuss1 * int32 FVGS6
4x tb = int32 vvrr1 * int32 GSFV6
  mnew = m + 1
4x out7plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS7
  grs -= fuv
4x tb = int32 vvrr0 * int32 GSFV7
4x out7 = ta + tb
  (int64) grs >>= 1
4x out7 += out7plus
4x ta = int32 d0 * int32 mod7
  (int64) h >>= 1
4x tb = int32 d1 * int32 mod6
4x out7plus2 = ta + tb
  m = -m
4x out7plus2 += carryy
4x out7 += out7plus2
                 signed<? z - 0
4x carryy = out7 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  fuv = oldg if !signed<
out7 &= _2p30m1x4
stack_FVGS5 = out7
FVGS8 = stack_FVGS8
  grs = h    if  signed<
GSFV8 = FVGS8[1,0]
mod8 = stack_mod8
  m = mnew   if  signed<
4x ta = int32 uuss1 * int32 FVGS7
4x tb = int32 vvrr1 * int32 GSFV7
  z = -1
4x out8plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS8
  oldg = grs
4x tb = int32 vvrr0 * int32 GSFV8
4x out8 = ta + tb
  h = grs + fuv
4x out8 += out8plus
4x ta = int32 d0 * int32 mod8
              =? grs & 1
4x tb = int32 d1 * int32 mod7
4x out8plus2 = ta + tb
  z = m   if !=
4x out8plus2 += carryy
4x out8 += out8plus2
  h = grs if  =
4x carryy = out8 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  mnew = m + 1
out8 &= _2p30m1x4
stack_FVGS6 = out8
  grs -= fuv
FVGS9 = stack_FVGS9
GSFV9 = FVGS9[1,0]
  (int64) grs >>= 1
mod9 = stack_mod9
4x ta = int32 uuss1 * int32 FVGS8
4x tb = int32 vvrr1 * int32 GSFV8
  (int64) h >>= 1
4x out9plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS9
  m = -m
4x tb = int32 vvrr0 * int32 GSFV9
4x out9 = ta + tb
                 signed<? z - 0
4x out9 += out9plus
4x ta = int32 d0 * int32 mod9
  fuv = oldg if !signed<
4x tb = int32 d1 * int32 mod8
4x out9plus2 = ta + tb
  grs = h    if  signed<
4x out9plus2 += carryy
4x out9 += out9plus2
  m = mnew   if  signed<
4x carryy = out9 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  z = -1
out9 &= _2p30m1x4
stack_FVGS7 = out9
  oldg = grs
FVGS10 = stack_FVGS10
GSFV10 = FVGS10[1,0]
  h = grs + fuv
mod10 = stack_mod10
4x ta = int32 uuss1 * int32 FVGS9
              =? grs & 1
4x tb = int32 vvrr1 * int32 GSFV9
4x out10plus = ta + tb
  z = m   if !=
4x ta = int32 uuss0 * int32 FVGS10
4x tb = int32 vvrr0 * int32 GSFV10
4x out10 = ta + tb
  h = grs if  =
4x out10 += out10plus
4x ta = int32 d0 * int32 mod10
  mnew = m + 1
4x tb = int32 d1 * int32 mod9
4x out10plus2 = ta + tb
  grs -= fuv
4x out10plus2 += carryy
4x out10 += out10plus2
  (int64) grs >>= 1
4x carryy = out10 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  (int64) h >>= 1
out10 &= _2p30m1x4
stack_FVGS8 = out10
  m = -m
FVGS11 = stack_FVGS11
GSFV11 = FVGS11[1,0]
                 signed<? z - 0
mod11 = stack_mod11
4x ta = int32 uuss1 * int32 FVGS10
  fuv = oldg if !signed<
4x tb = int32 vvrr1 * int32 GSFV10
4x out11plus = ta + tb
  grs = h    if  signed<
4x ta = int32 uuss0 * int32 FVGS11
4x tb = int32 vvrr0 * int32 GSFV11
  m = mnew   if  signed<
4x out11 = ta + tb
4x out11 += out11plus
  z = -1
4x ta = int32 d0 * int32 mod11
4x tb = int32 d1 * int32 mod10
4x out11plus2 = ta + tb
  oldg = grs
4x out11plus2 += carryy
4x out11 += out11plus2
  h = grs + fuv
4x carryy = out11 + _2p63m2p33x4 
4x carryy unsigned>>= 30
              =? grs & 1
out11 &= _2p30m1x4
stack_FVGS9 = out11
  z = m   if !=
FVGS12 = stack_FVGS12
GSFV12 = FVGS12[1,0]
  h = grs if  =
mod12 = stack_mod12
4x ta = int32 uuss1 * int32 FVGS11
  mnew = m + 1
4x tb = int32 vvrr1 * int32 GSFV11
4x out12plus = ta + tb
  grs -= fuv
4x ta = int32 uuss0 * int32 FVGS12
4x tb = int32 vvrr0 * int32 GSFV12
  (int64) grs >>= 1
4x out12 = ta + tb
4x out12 += out12plus
  (int64) h >>= 1
4x ta = int32 d0 * int32 mod12
4x tb = int32 d1 * int32 mod11
  m = -m
4x out12plus2 = ta + tb
4x out12plus2 += carryy
                 signed<? z - 0
4x out12 += out12plus2
4x carryy = out12 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  fuv = oldg if !signed<
out12 &= _2p30m1x4
stack_FVGS10 = out12
  grs = h    if  signed<
FVGS13 = stack_FVGS13
GSFV13 = FVGS13[1,0]
  m = mnew   if  signed<
mod13 = stack_mod13
4x ta = int32 uuss1 * int32 FVGS12
  z = -1
4x tb = int32 vvrr1 * int32 GSFV12
4x out13plus = ta + tb
  oldg = grs
4x ta = int32 uuss0 * int32 FVGS13
4x tb = int32 vvrr0 * int32 GSFV13
  h = grs + fuv
4x out13 = ta + tb
4x out13 += out13plus
              =? grs & 1
4x ta = int32 d0 * int32 mod13
4x tb = int32 d1 * int32 mod12
  z = m   if !=
4x out13plus2 = ta + tb
4x out13plus2 += carryy
  h = grs if  =
4x out13 += out13plus2
4x carryy = out13 + _2p63m2p33x4 
  mnew = m + 1
4x carryy unsigned>>= 30
out13 &= _2p30m1x4
  grs -= fuv
stack_FVGS11 = out13
FVGS14 = stack_FVGS14
GSFV14 = FVGS14[1,0]
  (int64) grs >>= 1
mod14 = stack_mod14
4x ta = int32 uuss1 * int32 FVGS13
  (int64) h >>= 1
4x tb = int32 vvrr1 * int32 GSFV13
4x out14plus = ta + tb
  m = -m
4x ta = int32 uuss0 * int32 FVGS14
4x tb = int32 vvrr0 * int32 GSFV14
                 signed<? z - 0
4x out14 = ta + tb
4x out14 += out14plus
  fuv = oldg if !signed<
4x ta = int32 d0 * int32 mod14
4x tb = int32 d1 * int32 mod13
  grs = h    if  signed<
4x out14plus2 = ta + tb
4x out14plus2 += carryy
  m = mnew   if  signed<
4x out14 += out14plus2
4x carryy = out14 + _2p63m2p33x4 
  z = -1
4x carryy unsigned>>= 30
out14 &= _2p30m1x4
  oldg = grs
stack_FVGS12 = out14
FVGS15 = stack_FVGS15
  h = grs + fuv
GSFV15 = FVGS15[1,0]
mod15 = stack_mod15
              =? grs & 1
4x ta = int32 uuss1 * int32 FVGS14
4x tb = int32 vvrr1 * int32 GSFV14
4x out15plus = ta + tb
  z = m   if !=
4x ta = int32 uuss0 * int32 FVGS15
4x tb = int32 vvrr0 * int32 GSFV15
  h = grs if  =
4x out15 = ta + tb
4x out15 += out15plus
  mnew = m + 1
4x ta = int32 d0 * int32 mod15
4x tb = int32 d1 * int32 mod14
  grs -= fuv
4x out15plus2 = ta + tb
4x out15plus2 += carryy
  (int64) grs >>= 1
4x out15 += out15plus2
4x carryy = out15 + _2p63m2p33x4 
  (int64) h >>= 1
4x carryy unsigned>>= 30
out15 &= _2p30m1x4
  m = -m
stack_FVGS13 = out15
FVGS16 = stack_FVGS16
                 signed<? z - 0
GSFV16 = FVGS16[1,0]
mod16 = stack_mod16
  fuv = oldg if !signed<
4x ta = int32 uuss1 * int32 FVGS15
4x tb = int32 vvrr1 * int32 GSFV15
  grs = h    if  signed<
4x out16plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS16
  m = mnew   if  signed<
4x tb = int32 vvrr0 * int32 GSFV16
4x out16 = ta + tb
4x out16 += out16plus
  z = -1
4x ta = int32 d0 * int32 mod16
4x tb = int32 d1 * int32 mod15
  oldg = grs
4x out16plus2 = ta + tb
4x out16plus2 += carryy
  h = grs + fuv
4x out16 += out16plus2
4x carryy = out16 + _2p63m2p33x4 
              =? grs & 1
4x carryy unsigned>>= 30
out16 &= _2p30m1x4
  z = m   if !=
stack_FVGS14 = out16
FVGS17 = stack_FVGS17
  h = grs if  =
GSFV17 = FVGS17[1,0]
mod17 = stack_mod17
  mnew = m + 1
4x ta = int32 uuss1 * int32 FVGS16
4x tb = int32 vvrr1 * int32 GSFV16
  grs -= fuv
4x out17plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS17
  (int64) grs >>= 1
4x tb = int32 vvrr0 * int32 GSFV17
4x out17 = ta + tb
  (int64) h >>= 1
4x out17 += out17plus
4x ta = int32 d0 * int32 mod17
  m = -m
4x tb = int32 d1 * int32 mod16
4x out17plus2 = ta + tb
4x out17plus2 += carryy
                 signed<? z - 0
4x out17 += out17plus2
4x carryy = out17 + _2p63m2p33x4 
  fuv = oldg if !signed<
4x carryy unsigned>>= 30
out17 &= _2p30m1x4
  grs = h    if  signed<
stack_FVGS15 = out17
FVGS18 = stack_FVGS18
  m = mnew   if  signed<
GSFV18 = FVGS18[1,0]
mod18 = stack_mod18
  z = -1
4x ta = int32 uuss1 * int32 FVGS17
4x tb = int32 vvrr1 * int32 GSFV17
  oldg = grs
4x out18plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS18
  h = grs + fuv
4x tb = int32 vvrr0 * int32 GSFV18
4x out18 = ta + tb
              =? grs & 1
4x out18 += out18plus
4x ta = int32 d0 * int32 mod18
  z = m   if !=
4x tb = int32 d1 * int32 mod17
4x out18plus2 = ta + tb
  h = grs if  =
4x out18plus2 += carryy
4x out18 += out18plus2
  mnew = m + 1
4x carryy = out18 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out18 &= _2p30m1x4
  grs -= fuv
stack_FVGS16 = out18
FVGS19 = stack_FVGS19
  (int64) grs >>= 1
GSFV19 = FVGS19[1,0]
mod19 = stack_mod19
  (int64) h >>= 1
4x ta = int32 uuss1 * int32 FVGS18
4x tb = int32 vvrr1 * int32 GSFV18
  m = -m
4x out19plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS19
                 signed<? z - 0
4x tb = int32 vvrr0 * int32 GSFV19
4x out19 = ta + tb
  fuv = oldg if !signed<
4x out19 += out19plus
4x ta = int32 d0 * int32 mod19
  grs = h    if  signed<
4x tb = int32 d1 * int32 mod18
4x out19plus2 = ta + tb
  m = mnew   if  signed<
4x out19plus2 += carryy
4x out19 += out19plus2
  z = -1
4x carryy = out19 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  oldg = grs
out19 &= _2p30m1x4
stack_FVGS17 = out19
  h = grs + fuv
FVGS20 = stack_FVGS20
GSFV20 = FVGS20[1,0]
mod20 = stack_mod20
              =? grs & 1
4x ta = int32 uuss1 * int32 FVGS19
4x tb = int32 vvrr1 * int32 GSFV19
  z = m   if !=
4x out20plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS20
  h = grs if  =
4x tb = int32 vvrr0 * int32 GSFV20
4x out20 = ta + tb
  mnew = m + 1
4x out20 += out20plus
4x ta = int32 d0 * int32 mod20
  grs -= fuv
4x tb = int32 d1 * int32 mod19
4x out20plus2 = ta + tb
  (int64) grs >>= 1
4x out20plus2 += carryy
4x out20 += out20plus2
  (int64) h >>= 1
4x carryy = out20 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  m = -m
out20 &= _2p30m1x4
stack_FVGS18 = out20
                 signed<? z - 0
FVGS21 = stack_FVGS21
GSFV21 = FVGS21[1,0]
  fuv = oldg if !signed<
mod21 = stack_mod21
4x ta = int32 uuss1 * int32 FVGS20
  grs = h    if  signed<
4x tb = int32 vvrr1 * int32 GSFV20
4x out21plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS21
  m = mnew   if  signed<
4x tb = int32 vvrr0 * int32 GSFV21
4x out21 = ta + tb
  z = -1
4x out21 += out21plus
4x ta = int32 d0 * int32 mod21
  oldg = grs
4x tb = int32 d1 * int32 mod20
4x out21plus2 = ta + tb
  h = grs + fuv
4x out21plus2 += carryy
4x out21 += out21plus2
              =? grs & 1
4x carryy = out21 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  z = m   if !=
out21 &= _2p30m1x4
stack_FVGS19 = out21
  h = grs if  =
FVGS22 = stack_FVGS22
GSFV22 = FVGS22[1,0]
  mnew = m + 1
mod22 = stack_mod22
4x ta = int32 uuss1 * int32 FVGS21
  grs -= fuv
4x tb = int32 vvrr1 * int32 GSFV21
4x out22plus = ta + tb
  (int64) grs >>= 1
4x ta = int32 uuss0 * int32 FVGS22
4x tb = int32 vvrr0 * int32 GSFV22
  (int64) h >>= 1
4x out22 = ta + tb
4x out22 += out22plus
4x ta = int32 d0 * int32 mod22
  m = -m
4x tb = int32 d1 * int32 mod21
4x out22plus2 = ta + tb
                 signed<? z - 0
4x out22plus2 += carryy
4x out22 += out22plus2
  fuv = oldg if !signed<
4x carryy = out22 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  grs = h    if  signed<
out22 &= _2p30m1x4
stack_FVGS20 = out22
  m = mnew   if  signed<
FVGS23 = stack_FVGS23
GSFV23 = FVGS23[1,0]
  z = -1
mod23 = stack_mod23
4x ta = int32 uuss1 * int32 FVGS22
  oldg = grs
4x tb = int32 vvrr1 * int32 GSFV22
4x out23plus = ta + tb
  h = grs + fuv
4x ta = int32 uuss0 * int32 FVGS23
4x tb = int32 vvrr0 * int32 GSFV23
              =? grs & 1
4x out23 = ta + tb
4x out23 += out23plus
  z = m   if !=
4x ta = int32 d0 * int32 mod23
4x tb = int32 d1 * int32 mod22
  h = grs if  =
4x out23plus2 = ta + tb
4x out23plus2 += carryy
4x out23 += out23plus2
  mnew = m + 1
4x carryy = out23 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  grs -= fuv
out23 &= _2p30m1x4
stack_FVGS21 = out23
  (int64) grs >>= 1
FVGS24 = stack_FVGS24
GSFV24 = FVGS24[1,0]
  (int64) h >>= 1
mod24 = stack_mod24
4x ta = int32 uuss1 * int32 FVGS23
  m = -m
4x tb = int32 vvrr1 * int32 GSFV23
4x out24plus = ta + tb
                 signed<? z - 0
4x ta = int32 uuss0 * int32 FVGS24
4x tb = int32 vvrr0 * int32 GSFV24
  fuv = oldg if !signed<
4x out24 = ta + tb
4x out24 += out24plus
  grs = h    if  signed<
4x ta = int32 d0 * int32 mod24
4x tb = int32 d1 * int32 mod23
  m = mnew   if  signed<
4x out24plus2 = ta + tb
4x out24plus2 += carryy
  z = -1
4x out24 += out24plus2
4x carryy = out24 + _2p63m2p33x4 
  oldg = grs
4x carryy unsigned>>= 30
out24 &= _2p30m1x4
stack_FVGS22 = out24
  h = grs + fuv
FVGS25 = stack_FVGS25
GSFV25 = FVGS25[1,0]
              =? grs & 1
mod25 = stack_mod25
4x ta = int32 uuss1 * int32 FVGS24
  z = m   if !=
4x tb = int32 vvrr1 * int32 GSFV24
4x out25plus = ta + tb
  h = grs if  =
4x ta = int32 uuss0 * int32 FVGS25
4x tb = int32 vvrr0 * int32 GSFV25
  mnew = m + 1
4x out25 = ta + tb
4x out25 += out25plus
  grs -= fuv
4x ta = int32 d0 * int32 mod25
4x tb = int32 d1 * int32 mod24
  (int64) grs >>= 1
4x out25plus2 = ta + tb
4x out25plus2 += carryy
  (int64) h >>= 1
4x out25 += out25plus2
4x carryy = out25 + _2p63m2p33x4 
  m = -m
4x carryy unsigned>>= 30
out25 &= _2p30m1x4
                 signed<? z - 0
stack_FVGS23 = out25
FVGS26 = stack_FVGS26
  fuv = oldg if !signed<
GSFV26 = FVGS26[1,0]
mod26 = stack_mod26
4x ta = int32 uuss1 * int32 FVGS25
  grs = h    if  signed<
4x tb = int32 vvrr1 * int32 GSFV25
4x out26plus = ta + tb
  m = mnew   if  signed<
4x ta = int32 uuss0 * int32 FVGS26
4x tb = int32 vvrr0 * int32 GSFV26
  z = -1
4x out26 = ta + tb
4x out26 += out26plus
  oldg = grs
4x ta = int32 d0 * int32 mod26
4x tb = int32 d1 * int32 mod25
  h = grs + fuv
4x out26plus2 = ta + tb
4x out26plus2 += carryy
              =? grs & 1
4x out26 += out26plus2
4x carryy = out26 + _2p63m2p33x4 
  z = m   if !=
4x carryy unsigned>>= 30
out26 &= _2p30m1x4
  h = grs if  =
stack_FVGS24 = out26
FVGS27 = stack_FVGS27
  mnew = m + 1
GSFV27 = FVGS27[1,0]
mod27 = stack_mod27
  grs -= fuv
4x ta = int32 uuss1 * int32 FVGS26
4x tb = int32 vvrr1 * int32 GSFV26
  (int64) grs >>= 1
4x out27plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS27
4x tb = int32 vvrr0 * int32 GSFV27
  (int64) h >>= 1
4x out27 = ta + tb
4x out27 += out27plus
  m = -m
4x ta = int32 d0 * int32 mod27
4x tb = int32 d1 * int32 mod26
                 signed<? z - 0
4x out27plus2 = ta + tb
4x out27plus2 += carryy
  fuv = oldg if !signed<
4x out27 += out27plus2
4x carryy = out27 + _2p63m2p33x4 
  grs = h    if  signed<
4x carryy unsigned>>= 30
out27 &= _2p30m1x4
  m = mnew   if  signed<
stack_FVGS25 = out27
FVGS28 = stack_FVGS28
  z = -1
GSFV28 = FVGS28[1,0]
mod28 = stack_mod28
  oldg = grs
4x ta = int32 uuss1 * int32 FVGS27
4x tb = int32 vvrr1 * int32 GSFV27
  h = grs + fuv
4x out28plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS28
              =? grs & 1
4x tb = int32 vvrr0 * int32 GSFV28
4x out28 = ta + tb
  z = m   if !=
4x out28 += out28plus
4x ta = int32 d0 * int32 mod28
4x tb = int32 d1 * int32 mod27
  h = grs if  =
4x out28plus2 = ta + tb
4x out28plus2 += carryy
  mnew = m + 1
4x out28 += out28plus2
4x carryy = out28 + _2p63m2p33x4 
  grs -= fuv
4x carryy unsigned>>= 30
out28 &= _2p30m1x4
  (int64) grs >>= 1
stack_FVGS26 = out28
FVGS29 = stack_FVGS29
  (int64) h >>= 1
GSFV29 = FVGS29[1,0]
mod29 = stack_mod29
  m = -m
4x ta = int32 uuss1 * int32 FVGS28
4x tb = int32 vvrr1 * int32 GSFV28
                 signed<? z - 0
4x out29plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS29
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV29
4x out29 = ta + tb
  grs = h    if  signed<
4x out29 += out29plus
4x ta = int32 d0 * int32 mod29
  m = mnew   if  signed<
4x tb = int32 d1 * int32 mod28
4x out29plus2 = ta + tb
  z = -1
4x out29plus2 += carryy
4x out29 += out29plus2
4x carryy = out29 + _2p63m2p33x4 
  oldg = grs
4x carryy unsigned>>= 30
out29 &= _2p30m1x4
  h = grs + fuv
stack_FVGS27 = out29
FVGS30 = stack_FVGS30
              =? grs & 1
GSFV30 = FVGS30[1,0]
mod30 = stack_mod30
  z = m   if !=
4x ta = int32 uuss1 * int32 FVGS29
4x tb = int32 vvrr1 * int32 GSFV29
  h = grs if  =
4x out30plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS30
  mnew = m + 1
4x tb = int32 vvrr0 * int32 GSFV30
4x out30 = ta + tb
  grs -= fuv
4x out30 += out30plus
4x ta = int32 d0 * int32 mod30
  (int64) grs >>= 1
4x tb = int32 d1 * int32 mod29
4x out30plus2 = ta + tb
  (int64) h >>= 1
4x out30plus2 += carryy
4x out30 += out30plus2
  m = -m
4x carryy = out30 + _2p63m2p33x4 
4x carryy unsigned>>= 30
                 signed<? z - 0
out30 &= _2p30m1x4
stack_FVGS28 = out30
FVGS31 = stack_FVGS31
  fuv = oldg if !signed<
GSFV31 = FVGS31[1,0]
mod31 = stack_mod31
  grs = h    if  signed<
4x ta = int32 uuss1 * int32 FVGS30
4x tb = int32 vvrr1 * int32 GSFV30
  m = mnew   if  signed<
4x out31plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS31
  z = -1
4x tb = int32 vvrr0 * int32 GSFV31
4x out31 = ta + tb
  oldg = grs
4x out31 += out31plus
4x ta = int32 d0 * int32 mod31
  h = grs + fuv
4x tb = int32 d1 * int32 mod30
4x out31plus2 = ta + tb
              =? grs & 1
4x out31plus2 += carryy
4x out31 += out31plus2
  z = m   if !=
4x carryy = out31 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  h = grs if  =
out31 &= _2p30m1x4
stack_FVGS29 = out31
  mnew = m + 1
FVGS32 = stack_FVGS32
GSFV32 = FVGS32[1,0]
  grs -= fuv
mod32 = stack_mod32
4x ta = int32 uuss1 * int32 FVGS31
4x tb = int32 vvrr1 * int32 GSFV31
  (int64) grs >>= 1
4x out32plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS32
  (int64) h >>= 1
4x tb = int32 vvrr0 * int32 GSFV32
4x out32 = ta + tb
  m = -m
4x out32 += out32plus
4x ta = int32 d0 * int32 mod32
                 signed<? z - 0
4x tb = int32 d1 * int32 mod31
4x out32plus2 = ta + tb
  fuv = oldg if !signed<
4x out32plus2 += carryy
4x out32 += out32plus2
  grs = h    if  signed<
4x carryy = out32 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  m = mnew   if  signed<
out32 &= _2p30m1x4
stack_FVGS30 = out32
extract_init:
  _2p20a2p41 = stack_2p20a2p41
FVGS33 = stack_FVGS33
GSFV33 = FVGS33[1,0]
mod33 = stack_mod33
4x ta = int32 uuss1 * int32 FVGS32
  s = grs + _2p20a2p41
4x tb = int32 vvrr1 * int32 GSFV32
4x out33plus = ta + tb
  (int64) s >>= 42
4x ta = int32 uuss0 * int32 FVGS33
4x tb = int32 vvrr0 * int32 GSFV33
4x out33 = ta + tb
  t2 = g
4x out33 += out33plus
4x ta = int32 d0 * int32 mod33
  g *= s  
4x tb = int32 d1 * int32 mod32
4x out33plus2 = ta + tb
  v = fuv + _2p20a2p41
4x out33plus2 += carryy
4x out33 += out33plus2
  (int64) v >>= 42
4x carryy = out33 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  t2 *= v
out33 &= _2p30m1x4
stack_FVGS31 = out33
  _2p20 = stack_2p20
FVGS34 = stack_FVGS34
GSFV34 = FVGS34[1,0]
  r = grs + _2p20
mod34 = stack_mod34
4x ta = int32 uuss1 * int32 FVGS33
  r <<= 22
4x tb = int32 vvrr1 * int32 GSFV33
4x out34plus = ta + tb
  (int64) r >>= 43
4x ta = int32 uuss0 * int32 FVGS34
4x tb = int32 vvrr0 * int32 GSFV34
      rax = f
4x out34 = ta + tb
4x out34 += out34plus
      rax *= r
4x ta = int32 d0 * int32 mod34
4x tb = int32 d1 * int32 mod33
4x out34plus2 = ta + tb
  u = fuv + _2p20
4x out34plus2 += carryy
4x out34 += out34plus2
  u <<= 22
4x carryy = out34 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  (int64) u >>= 43
out34 &= _2p30m1x4
stack_FVGS32 = out34
       f *= u
_2p33x4 = stack_2p33x4
4x ta = int32 uuss1 * int32 FVGS34
       f += t2
4x tb = int32 vvrr1 * int32 GSFV34
4x out35plus = ta + tb
       g += rax
4x ta = int32 mod34 * int32 d1
4x out35 = ta + carryy
  (int64) f >>= 20
4x out35 += out35plus
4x out36 = out35 + _2p63m2p33x4
  (int64) g >>= 20
4x out36 unsigned >>= 30
4x out36 -= _2p33x4
  inplace stack_vvrr[0] = v
out35 &= _2p30m1x4
stack_FVGS33 = out35
  inplace stack_uuss[0] = u
stack_FVGS34 = out36
  inplace stack_uuss[2] = s
  inplace stack_vvrr[2] = r
  loop = 2
