loop20_init:
  fuv = f & ~ _m2p20
FVGS0 = stack_FVGS0
new uuss
uuss = u,uuss[1],0,0
  grs = g & ~ _m2p20
uuss = uuss[0],s,0,0
  fuv += stack_m2p41
GSFV0 = FVGS0[1,0]
  grs += stack_m2p62
uuss = uuss[0,0,1,1]
  z = -1
vvrr = vvrr[0,0,1,1]
  oldg = grs
_2p30m1x4 = stack_2p30m1x4
  h = grs + fuv
uuss0 = uuss & _2p30m1x4
              =? grs & 1
vvrr0 = vvrr & _2p30m1x4 
  z = m   if !=
_2p63x4 = stack_2p63x4
  h = grs if  =
uuss1 = uuss ^ _2p63x4
vvrr1 = vvrr ^ _2p63x4
  mnew = m + 1
4x uuss1 unsigned>>= 30
  grs -= fuv
4x vvrr1 unsigned>>= 30
  (int64) grs >>= 1
_2p33x4 = stack_2p33x4
  (int64) h >>= 1
4x uuss1 -= _2p33x4
  m = -m
4x vvrr1 -= _2p33x4
                 signed<? z - 0
4x ta = int32 uuss0 * int32 FVGS0
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV0
  grs = h    if  signed<
4x out0 = ta + tb
  m = mnew   if  signed<
minvx4 = 4x stack_minv
  z = -1
mod0 = stack_mod0
4x d0 = int32 minvx4 * int32 out0
  oldg = grs
d0 &= _2p30m1x4
  h = grs + fuv
4x ta = int32 mod0 * int32 d0
              =? grs & 1
4x out0 += ta
  z = m   if !=
4x carryy = out0 +_2p63x4
  h = grs if  =
4x carryy unsigned>>= 30
  mnew = m + 1
FVGS1 = stack_FVGS1
  grs -= fuv
GSFV1 = FVGS1[1,0]
  (int64) grs >>= 1
mod1 = stack_mod1
  (int64) h >>= 1
4x ta = int32 uuss1 * int32 FVGS0
  m = -m
4x tb = int32 vvrr1 * int32 GSFV0
4x out1plus = ta + tb
                 signed<? z - 0
4x ta = int32 uuss0 * int32 FVGS1
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV1
  grs = h    if  signed<
4x out1 = ta + tb
  m = mnew   if  signed<
4x out1 += out1plus
  z = -1
4x ta = int32 d0 * int32 mod1
  oldg = grs
4x ta += carryy
  h = grs + fuv
4x out1 += ta
              =? grs & 1
4x d1 = int32 minvx4 * int32 out1
  z = m   if !=
d1 &= _2p30m1x4
  h = grs if  =
4x ta = int32 mod0 * int32 d1
4x out1 += ta
  mnew = m + 1
_2p63m2p33x4 = stack_2p63m2p33x4
  grs -= fuv
4x carryy = out1 + _2p63m2p33x4 
  (int64) grs >>= 1
4x carryy unsigned>>= 30
  (int64) h >>= 1
FVGS2 = stack_FVGS2
  m = -m
GSFV2 = FVGS2[1,0]
                 signed<? z - 0
mod2 = stack_mod2
  fuv = oldg if !signed<
4x ta = int32 uuss1 * int32 FVGS1
  grs = h    if  signed<
4x tb = int32 vvrr1 * int32 GSFV1
  m = mnew   if  signed<
4x out2plus = ta + tb
  z = -1
4x ta = int32 uuss0 * int32 FVGS2
4x tb = int32 vvrr0 * int32 GSFV2
  oldg = grs
4x out2 = ta + tb
  h = grs + fuv
4x out2 += out2plus
              =? grs & 1
4x ta = int32 d0 * int32 mod2
  z = m   if !=
4x tb = int32 d1 * int32 mod1
  h = grs if  =
4x out2plus2 = ta + tb
  mnew = m + 1
4x out2plus2 += carryy
  grs -= fuv
4x out2 += out2plus2
  (int64) grs >>= 1
4x carryy = out2 + _2p63m2p33x4 
  (int64) h >>= 1
4x carryy unsigned>>= 30
  m = -m
out2 &= _2p30m1x4
stack_FVGS0 = out2
                 signed<? z - 0
FVGS3 = stack_FVGS3
  fuv = oldg if !signed<
GSFV3 = FVGS3[1,0]
  grs = h    if  signed<
mod3 = stack_mod3
  m = mnew   if  signed<
4x ta = int32 uuss1 * int32 FVGS2
  z = -1
4x tb = int32 vvrr1 * int32 GSFV2
  oldg = grs
4x out3plus = ta + tb
  h = grs + fuv
4x ta = int32 uuss0 * int32 FVGS3
              =? grs & 1
4x tb = int32 vvrr0 * int32 GSFV3
  z = m   if !=
4x out3 = ta + tb
  h = grs if  =
4x out3 += out3plus
4x ta = int32 d0 * int32 mod3
  mnew = m + 1
4x tb = int32 d1 * int32 mod2
  grs -= fuv
4x out3plus2 = ta + tb
  (int64) grs >>= 1
4x out3plus2 += carryy
  (int64) h >>= 1
4x out3 += out3plus2
  m = -m
4x carryy = out3 + _2p63m2p33x4 
                 signed<? z - 0
4x carryy unsigned>>= 30
  fuv = oldg if !signed<
out3 &= _2p30m1x4
  grs = h    if  signed<
stack_FVGS1 = out3
  m = mnew   if  signed<
FVGS4 = stack_FVGS4
  z = -1
GSFV4 = FVGS4[1,0]
mod4 = stack_mod4
  oldg = grs
4x ta = int32 uuss1 * int32 FVGS3
  h = grs + fuv
4x tb = int32 vvrr1 * int32 GSFV3
              =? grs & 1
4x out4plus = ta + tb
  z = m   if !=
4x ta = int32 uuss0 * int32 FVGS4
  h = grs if  =
4x tb = int32 vvrr0 * int32 GSFV4
  mnew = m + 1
4x out4 = ta + tb
  grs -= fuv
4x out4 += out4plus
  (int64) grs >>= 1
4x ta = int32 d0 * int32 mod4
  (int64) h >>= 1
4x tb = int32 d1 * int32 mod3
  m = -m
4x out4plus2 = ta + tb
4x out4plus2 += carryy
                 signed<? z - 0
4x out4 += out4plus2
  fuv = oldg if !signed<
4x carryy = out4 + _2p63m2p33x4 
  grs = h    if  signed<
4x carryy unsigned>>= 30
  m = mnew   if  signed<
out4 &= _2p30m1x4
  z = -1
stack_FVGS2 = out4
  oldg = grs
FVGS5 = stack_FVGS5
  h = grs + fuv
GSFV5 = FVGS5[1,0]
              =? grs & 1
mod5 = stack_mod5
  z = m   if !=
4x ta = int32 uuss1 * int32 FVGS4
  h = grs if  =
4x tb = int32 vvrr1 * int32 GSFV4
4x out5plus = ta + tb
  mnew = m + 1
4x ta = int32 uuss0 * int32 FVGS5
  grs -= fuv
4x tb = int32 vvrr0 * int32 GSFV5
  (int64) grs >>= 1
4x out5 = ta + tb
  (int64) h >>= 1
4x out5 += out5plus
  m = -m
4x ta = int32 d0 * int32 mod5
                 signed<? z - 0
4x tb = int32 d1 * int32 mod4
  fuv = oldg if !signed<
4x out5plus2 = ta + tb
  grs = h    if  signed<
4x out5plus2 += carryy
  m = mnew   if  signed<
4x out5 += out5plus2
  z = -1
4x carryy = out5 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  oldg = grs
out5 &= _2p30m1x4
  h = grs + fuv
stack_FVGS3 = out5
              =? grs & 1
FVGS6 = stack_FVGS6
  z = m   if !=
GSFV6 = FVGS6[1,0]
  h = grs if  =
mod6 = stack_mod6
  mnew = m + 1
4x ta = int32 uuss1 * int32 FVGS5
  grs -= fuv
4x tb = int32 vvrr1 * int32 GSFV5
  (int64) grs >>= 1
4x out6plus = ta + tb
  (int64) h >>= 1
4x ta = int32 uuss0 * int32 FVGS6
  m = -m
4x tb = int32 vvrr0 * int32 GSFV6
4x out6 = ta + tb
                 signed<? z - 0
4x out6 += out6plus
  fuv = oldg if !signed<
4x ta = int32 d0 * int32 mod6
  grs = h    if  signed<
4x tb = int32 d1 * int32 mod5
  m = mnew   if  signed<
4x out6plus2 = ta + tb
  z = -1
4x out6plus2 += carryy
  oldg = grs
4x out6 += out6plus2
  h = grs + fuv
4x carryy = out6 + _2p63m2p33x4 
              =? grs & 1
4x carryy unsigned>>= 30
  z = m   if !=
out6 &= _2p30m1x4
  h = grs if  =
stack_FVGS4 = out6
FVGS7 = stack_FVGS7
  mnew = m + 1
GSFV7 = FVGS7[1,0]
  grs -= fuv
mod7 = stack_mod7
  (int64) grs >>= 1
4x ta = int32 uuss1 * int32 FVGS6
  (int64) h >>= 1
4x tb = int32 vvrr1 * int32 GSFV6
  m = -m
4x out7plus = ta + tb
                 signed<? z - 0
4x ta = int32 uuss0 * int32 FVGS7
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV7
  grs = h    if  signed<
4x out7 = ta + tb
  m = mnew   if  signed<
4x out7 += out7plus
  z = -1
4x ta = int32 d0 * int32 mod7
4x tb = int32 d1 * int32 mod6
  oldg = grs
4x out7plus2 = ta + tb
  h = grs + fuv
4x out7plus2 += carryy
              =? grs & 1
4x out7 += out7plus2
  z = m   if !=
4x carryy = out7 + _2p63m2p33x4 
  h = grs if  =
4x carryy unsigned>>= 30
  mnew = m + 1
out7 &= _2p30m1x4
  grs -= fuv
stack_FVGS5 = out7
  (int64) grs >>= 1
FVGS8 = stack_FVGS8
  (int64) h >>= 1
GSFV8 = FVGS8[1,0]
  m = -m
mod8 = stack_mod8
4x ta = int32 uuss1 * int32 FVGS7
                 signed<? z - 0
4x tb = int32 vvrr1 * int32 GSFV7
  fuv = oldg if !signed<
4x out8plus = ta + tb
  grs = h    if  signed<
4x ta = int32 uuss0 * int32 FVGS8
  m = mnew   if  signed<
4x tb = int32 vvrr0 * int32 GSFV8
  z = -1
4x out8 = ta + tb
  oldg = grs
4x out8 += out8plus
  h = grs + fuv
4x ta = int32 d0 * int32 mod8
              =? grs & 1
4x tb = int32 d1 * int32 mod7
  z = m   if !=
4x out8plus2 = ta + tb
  h = grs if  =
4x out8plus2 += carryy
4x out8 += out8plus2
  mnew = m + 1
4x carryy = out8 + _2p63m2p33x4 
  grs -= fuv
4x carryy unsigned>>= 30
  (int64) grs >>= 1
out8 &= _2p30m1x4
  (int64) h >>= 1
stack_FVGS6 = out8
  m = -m
FVGS9 = stack_FVGS9
                 signed<? z - 0
GSFV9 = FVGS9[1,0]
  fuv = oldg if !signed<
mod9 = stack_mod9
  grs = h    if  signed<
4x ta = int32 uuss1 * int32 FVGS8
  m = mnew   if  signed<
4x tb = int32 vvrr1 * int32 GSFV8
  z = -1
4x out9plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS9
  oldg = grs
4x tb = int32 vvrr0 * int32 GSFV9
  h = grs + fuv
4x out9 = ta + tb
              =? grs & 1
4x out9 += out9plus
  z = m   if !=
4x ta = int32 d0 * int32 mod9
  h = grs if  =
4x tb = int32 d1 * int32 mod8
  mnew = m + 1
4x out9plus2 = ta + tb
  grs -= fuv
4x out9plus2 += carryy
  (int64) grs >>= 1
4x out9 += out9plus2
  (int64) h >>= 1
4x carryy = out9 + _2p63m2p33x4 
  m = -m
4x carryy unsigned>>= 30
out9 &= _2p30m1x4
                 signed<? z - 0
stack_FVGS7 = out9
  fuv = oldg if !signed<
FVGS10 = stack_FVGS10
  grs = h    if  signed<
GSFV10 = FVGS10[1,0]
  m = mnew   if  signed<
mod10 = stack_mod10
  z = -1
4x ta = int32 uuss1 * int32 FVGS9
  oldg = grs
4x tb = int32 vvrr1 * int32 GSFV9
  h = grs + fuv
4x out10plus = ta + tb
              =? grs & 1
4x ta = int32 uuss0 * int32 FVGS10
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV10
  h = grs if  =
4x out10 = ta + tb
4x out10 += out10plus
  mnew = m + 1
4x ta = int32 d0 * int32 mod10
  grs -= fuv
4x tb = int32 d1 * int32 mod9
  (int64) grs >>= 1
4x out10plus2 = ta + tb
  (int64) h >>= 1
4x out10plus2 += carryy
  m = -m
4x out10 += out10plus2
                 signed<? z - 0
4x carryy = out10 + _2p63m2p33x4 
  fuv = oldg if !signed<
4x carryy unsigned>>= 30
  grs = h    if  signed<
out10 &= _2p30m1x4
  m = mnew   if  signed<
stack_FVGS8 = out10
  z = -1
FVGS11 = stack_FVGS11
GSFV11 = FVGS11[1,0]
  oldg = grs
mod11 = stack_mod11
  h = grs + fuv
4x ta = int32 uuss1 * int32 FVGS10
              =? grs & 1
4x tb = int32 vvrr1 * int32 GSFV10
  z = m   if !=
4x out11plus = ta + tb
  h = grs if  =
4x ta = int32 uuss0 * int32 FVGS11
  mnew = m + 1
4x tb = int32 vvrr0 * int32 GSFV11
  grs -= fuv
4x out11 = ta + tb
  (int64) grs >>= 1
4x out11 += out11plus
  (int64) h >>= 1
4x ta = int32 d0 * int32 mod11
  m = -m
4x tb = int32 d1 * int32 mod10
4x out11plus2 = ta + tb
                 signed<? z - 0
4x out11plus2 += carryy
  fuv = oldg if !signed<
4x out11 += out11plus2
  grs = h    if  signed<
4x carryy = out11 + _2p63m2p33x4 
  m = mnew   if  signed<
4x carryy unsigned>>= 30
  z = -1
out11 &= _2p30m1x4
  oldg = grs
stack_FVGS9 = out11
  h = grs + fuv
FVGS12 = stack_FVGS12
              =? grs & 1
GSFV12 = FVGS12[1,0]
  z = m   if !=
mod12 = stack_mod12
  h = grs if  =
4x ta = int32 uuss1 * int32 FVGS11
4x tb = int32 vvrr1 * int32 GSFV11
  mnew = m + 1
4x out12plus = ta + tb
  grs -= fuv
4x ta = int32 uuss0 * int32 FVGS12
  (int64) grs >>= 1
4x tb = int32 vvrr0 * int32 GSFV12
  (int64) h >>= 1
4x out12 = ta + tb
  m = -m
4x out12 += out12plus
                 signed<? z - 0
4x ta = int32 d0 * int32 mod12
  fuv = oldg if !signed<
4x tb = int32 d1 * int32 mod11
  grs = h    if  signed<
4x out12plus2 = ta + tb
  m = mnew   if  signed<
4x out12plus2 += carryy
  z = -1
4x out12 += out12plus2
4x carryy = out12 + _2p63m2p33x4 
  oldg = grs
4x carryy unsigned>>= 30
  h = grs + fuv
out12 &= _2p30m1x4
              =? grs & 1
stack_FVGS10 = out12
  z = m   if !=
FVGS13 = stack_FVGS13
  h = grs if  =
GSFV13 = FVGS13[1,0]
  mnew = m + 1
mod13 = stack_mod13
  grs -= fuv
4x ta = int32 uuss1 * int32 FVGS12
  (int64) grs >>= 1
4x tb = int32 vvrr1 * int32 GSFV12
  (int64) h >>= 1
4x out13plus = ta + tb
  m = -m
4x ta = int32 uuss0 * int32 FVGS13
4x tb = int32 vvrr0 * int32 GSFV13
                 signed<? z - 0
4x out13 = ta + tb
  fuv = oldg if !signed<
4x out13 += out13plus
  grs = h    if  signed<
4x ta = int32 d0 * int32 mod13
  m = mnew   if  signed<
4x tb = int32 d1 * int32 mod12
  z = -1
4x out13plus2 = ta + tb
  oldg = grs
4x out13plus2 += carryy
  h = grs + fuv
4x out13 += out13plus2
              =? grs & 1
4x carryy = out13 + _2p63m2p33x4 
  z = m   if !=
4x carryy unsigned>>= 30
  h = grs if  =
out13 &= _2p30m1x4
stack_FVGS11 = out13
  mnew = m + 1
FVGS14 = stack_FVGS14
  grs -= fuv
GSFV14 = FVGS14[1,0]
  (int64) grs >>= 1
mod14 = stack_mod14
  (int64) h >>= 1
4x ta = int32 uuss1 * int32 FVGS13
  m = -m
4x tb = int32 vvrr1 * int32 GSFV13
                 signed<? z - 0
4x out14plus = ta + tb
  fuv = oldg if !signed<
4x ta = int32 uuss0 * int32 FVGS14
  grs = h    if  signed<
4x tb = int32 vvrr0 * int32 GSFV14
  m = mnew   if  signed<
4x out14 = ta + tb
  z = -1
4x out14 += out14plus
4x ta = int32 d0 * int32 mod14
  oldg = grs
4x tb = int32 d1 * int32 mod13
  h = grs + fuv
4x out14plus2 = ta + tb
              =? grs & 1
4x out14plus2 += carryy
  z = m   if !=
4x out14 += out14plus2
  h = grs if  =
4x carryy = out14 + _2p63m2p33x4 
  mnew = m + 1
4x carryy unsigned>>= 30
  grs -= fuv
out14 &= _2p30m1x4
  (int64) grs >>= 1
stack_FVGS12 = out14
  (int64) h >>= 1
FVGS15 = stack_FVGS15
  m = -m
GSFV15 = FVGS15[1,0]
mod15 = stack_mod15
                 signed<? z - 0
4x ta = int32 uuss1 * int32 FVGS14
  fuv = oldg if !signed<
4x tb = int32 vvrr1 * int32 GSFV14
  grs = h    if  signed<
4x out15plus = ta + tb
  m = mnew   if  signed<
4x ta = int32 uuss0 * int32 FVGS15
  z = -1
4x tb = int32 vvrr0 * int32 GSFV15
  oldg = grs
4x out15 = ta + tb
  h = grs + fuv
4x out15 += out15plus
              =? grs & 1
4x ta = int32 d0 * int32 mod15
  z = m   if !=
4x tb = int32 d1 * int32 mod14
  h = grs if  =
4x out15plus2 = ta + tb
4x out15plus2 += carryy
  mnew = m + 1
4x out15 += out15plus2
  grs -= fuv
4x carryy = out15 + _2p63m2p33x4 
  (int64) grs >>= 1
4x carryy unsigned>>= 30
  (int64) h >>= 1
out15 &= _2p30m1x4
  m = -m
stack_FVGS13 = out15
                 signed<? z - 0
FVGS16 = stack_FVGS16
  fuv = oldg if !signed<
GSFV16 = FVGS16[1,0]
  grs = h    if  signed<
mod16 = stack_mod16
  m = mnew   if  signed<
4x ta = int32 uuss1 * int32 FVGS15
  z = -1
4x tb = int32 vvrr1 * int32 GSFV15
4x out16plus = ta + tb
  oldg = grs
4x ta = int32 uuss0 * int32 FVGS16
  h = grs + fuv
4x tb = int32 vvrr0 * int32 GSFV16
              =? grs & 1
4x out16 = ta + tb
  z = m   if !=
4x out16 += out16plus
  h = grs if  =
4x ta = int32 d0 * int32 mod16
  mnew = m + 1
4x tb = int32 d1 * int32 mod15
  grs -= fuv
4x out16plus2 = ta + tb
  (int64) grs >>= 1
4x out16plus2 += carryy
  (int64) h >>= 1
4x out16 += out16plus2
  m = -m
4x carryy = out16 + _2p63m2p33x4 
4x carryy unsigned>>= 30
                 signed<? z - 0
out16 &= _2p30m1x4
  fuv = oldg if !signed<
stack_FVGS14 = out16
  grs = h    if  signed<
FVGS17 = stack_FVGS17
  m = mnew   if  signed<
GSFV17 = FVGS17[1,0]
extract_init:
  _2p20a2p41 = stack_2p20a2p41
mod17 = stack_mod17
4x ta = int32 uuss1 * int32 FVGS16
  s = grs + _2p20a2p41
4x tb = int32 vvrr1 * int32 GSFV16
  (int64) s >>= 42
4x out17plus = ta + tb
  t2 = g
4x ta = int32 uuss0 * int32 FVGS17
  g *= s  
4x tb = int32 vvrr0 * int32 GSFV17
4x out17 = ta + tb
  v = fuv + _2p20a2p41
4x out17 += out17plus
  (int64) v >>= 42
4x ta = int32 d0 * int32 mod17
  t2 *= v
4x tb = int32 d1 * int32 mod16
  _2p20 = stack_2p20
4x out17plus2 = ta + tb
  r = grs + _2p20
4x out17plus2 += carryy
  r <<= 22
4x out17 += out17plus2
  (int64) r >>= 43
4x carryy = out17 + _2p63m2p33x4 
      rax = f
4x carryy unsigned>>= 30
      rax *= r
out17 &= _2p30m1x4
  u = fuv + _2p20
stack_FVGS15 = out17
_2p33x4 = stack_2p33x4
  u <<= 22
4x ta = int32 uuss1 * int32 FVGS17
  (int64) u >>= 43
4x tb = int32 vvrr1 * int32 GSFV17
       f *= u
4x out18plus = ta + tb
       f += t2
4x ta = int32 mod17 * int32 d1
       g += rax
4x out18 = ta + carryy
  (int64) f >>= 20
4x out18 += out18plus
  (int64) g >>= 20
4x out19 = out18 + _2p63m2p33x4
  inplace stack_vvrr[0] = v
4x out19 unsigned >>= 30
  inplace stack_uuss[0] = u
4x out19 -= _2p33x4
  inplace stack_uuss[2] = s
out18 &= _2p30m1x4
stack_FVGS16 = out18
  inplace stack_vvrr[2] = r
stack_FVGS17 = out19
  loop = 2
