FVGS0 = stack_FVGS0
loop15_init:
  fuv = f & ~ _m2p15
new uuss
new vvrr
uuss = u,uuss[1],0,0
  grs = g & ~ _m2p15
  fuv |= stack_m2p32
  grs |= stack_m2p48
  z = 0
vvrr = v,vvrr[1],0,0
  h = grs + fuv
  mnew = m + 18446744073709551615
uuss = uuss[0],s,0,0
  oldg = grs
vvrr = vvrr[0],r,0,0
              =? grs & 1
GSFV0 = FVGS0[1,0]
  h = grs if  =
  z = m   if !=
uuss = uuss[0,0,1,1]
  m = ~m
vvrr = vvrr[0,0,1,1]
  grs -= fuv
  (int64) h >>= 1
_2p30m1x4 = stack_2p30m1x4
  (int64) grs >>= 1
uuss0 = uuss & _2p30m1x4
		 signed<? z - 0
  fuv = oldg if  signed<
vvrr0 = vvrr & _2p30m1x4
  grs = h    if !signed<
4x ta = int32 uuss0 * int32 FVGS0
  m = mnew   if !signed<
4x tb = int32 vvrr0 * int32 GSFV0
  z = 0
  h = grs + fuv
4x out0 = ta + tb
  mnew = m + 18446744073709551615
_inv19_2p30x4 = stack_inv19_2p30x4
  oldg = grs
              =? grs & 1
_19x4 = stack_19x4
  h = grs if  =
4x d0 = int32 out0 * int32 _inv19_2p30x4
  z = m   if !=
  m = ~m
d0 &= _2p30m1x4
  grs -= fuv
4x d0x19 = int32 d0 * int32 _19x4
  (int64) h >>= 1
4x out0 -= d0x19
  (int64) grs >>= 1
		 signed<? z - 0
4x carryy = out0 + stack_2p63x4
  fuv = oldg if  signed<
4x carryy unsigned>>= 30
  grs = h    if !signed<
  m = mnew   if !signed<
4x out8plus2 = d0 << 15
  z = 0
FVGS1 = stack_FVGS1
  h = grs + fuv
  mnew = m + 18446744073709551615
GSFV1 = FVGS1[1,0]
  oldg = grs
4x ta = int32 uuss0 * int32 FVGS1
              =? grs & 1
4x tb = int32 vvrr0 * int32 GSFV1
  h = grs if  =
  z = m   if !=
4x out1plus = ta + tb
  m = ~m
4x uuss1 = uuss unsigned>> 30
  grs -= fuv
  (int64) h >>= 1
4x vvrr1 = vvrr unsigned>> 30
  (int64) grs >>= 1
4x ta = int32 uuss1 * int32 FVGS0
		 signed<? z - 0
  fuv = oldg if  signed<
4x tb = int32 vvrr1 * int32 GSFV0
  grs = h    if !signed<
4x out1 = ta + tb
  m = mnew   if !signed<
4x out1 += out1plus
  z = 0
  h = grs + fuv
4x out1 += carryy
  mnew = m + 18446744073709551615
4x d1 = int32 out1 * int32 _inv19_2p30x4
  oldg = grs
              =? grs & 1
d1 &= _2p30m1x4
  h = grs if  =
4x d1x19 = int32 d1 * int32 _19x4
  z = m   if !=
  m = ~m
4x out1 -= d1x19
  grs -= fuv
4x carryy = out1 + _2p63m2p33x4 
  (int64) h >>= 1
4x carryy unsigned>>= 30
  (int64) grs >>= 1
		 signed<? z - 0
4x out9 = d1 << 15
  fuv = oldg if  signed<
FVGS2 = stack_FVGS2 
  grs = h    if !signed<
  m = mnew   if !signed<
GSFV2 = FVGS2[1,0]
  z = 0
4x ta = int32 uuss1 * int32 FVGS1
  h = grs + fuv
  mnew = m + 18446744073709551615
4x tb = int32 vvrr1 * int32 GSFV1
  oldg = grs
4x out2plus = ta + tb
              =? grs & 1
4x ta = int32 uuss0 * int32 FVGS2
  h = grs if  =
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV2
  m = ~m
4x out2 = ta + tb
  grs -= fuv
  (int64) h >>= 1
4x out2 += out2plus
  (int64) grs >>= 1
4x out2 += carryy
		 signed<? z - 0
  fuv = oldg if  signed<
4x carryy = out2 + _2p63m2p33x4 
  grs = h    if !signed<
4x carryy unsigned>>= 30
  m = mnew   if !signed<
FVGS3 = stack_FVGS3 
  z = 0
  h = grs + fuv
GSFV3 = FVGS3[1,0]
  mnew = m + 18446744073709551615
4x ta = int32 uuss1 * int32 FVGS2
  oldg = grs
              =? grs & 1
4x tb = int32 vvrr1 * int32 GSFV2
  h = grs if  =
4x out3plus = ta + tb
  z = m   if !=
  m = ~m
4x ta = int32 uuss0 * int32 FVGS3
  grs -= fuv
4x tb = int32 vvrr0 * int32 GSFV3
  (int64) h >>= 1
4x out3 = ta + tb
  (int64) grs >>= 1
		 signed<? z - 0
4x out3 += out3plus
  fuv = oldg if  signed<
4x out3 += carryy
  grs = h    if !signed<
  m = mnew   if !signed<
out2 &= _2p30m1x4
  z = 0
4x carryy = out3 + _2p63m2p33x4 
  h = grs + fuv
  mnew = m + 18446744073709551615
4x carryy unsigned>>= 30
  oldg = grs
out3 &= _2p30m1x4
              =? grs & 1
stack_FVGS1 = out3
  h = grs if  =
  z = m   if !=
4x ta = out3 << 30
  m = ~m
4x ta += out2
  grs -= fuv
  (int64) h >>= 1
stack_fxgx = ta
  (int64) grs >>= 1
FVGS4 = stack_FVGS4 
		 signed<? z - 0
  fuv = oldg if  signed<
GSFV4 = FVGS4[1,0]
  grs = h    if !signed<
4x ta = int32 uuss1 * int32 FVGS3
  m = mnew   if !signed<
4x tb = int32 vvrr1 * int32 GSFV3
  z = 0
  h = grs + fuv
4x out4plus = ta + tb
  mnew = m + 18446744073709551615
4x ta = int32 uuss0 * int32 FVGS4
  oldg = grs
              =? grs & 1
4x tb = int32 vvrr0 * int32 GSFV4
  h = grs if  =
4x out4 = ta + tb
  z = m   if !=
  m = ~m
4x out4 += out4plus
  grs -= fuv
4x out4 += carryy
  (int64) h >>= 1
4x carryy = out4 + _2p63m2p33x4 
  (int64) grs >>= 1
		 signed<? z - 0
4x carryy unsigned>>= 30
  fuv = oldg if  signed<
FVGS5 = stack_FVGS5 
  grs = h    if !signed<
  m = mnew   if !signed<
GSFV5 = FVGS5[1,0]
  z = 0
4x ta = int32 uuss1 * int32 FVGS4
  h = grs + fuv
  mnew = m + 18446744073709551615
4x tb = int32 vvrr1 * int32 GSFV4
  oldg = grs
4x out5plus = ta + tb
              =? grs & 1
4x ta = int32 uuss0 * int32 FVGS5
  h = grs if  =
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV5
  m = ~m
4x out5 = ta + tb
  grs -= fuv
  (int64) h >>= 1
4x out5 += out5plus
  (int64) grs >>= 1
4x out5 += carryy
		 signed<? z - 0
  fuv = oldg if  signed<
4x carryy = out5 + _2p63m2p33x4 
  grs = h    if !signed<
4x carryy unsigned>>= 30
  m = mnew   if !signed<
out5 &= _2p30m1x4
  z = 0
  h = grs + fuv
out4 &= _2p30m1x4
  mnew = m + 18446744073709551615
stack_FVGS2 = out4
  oldg = grs
              =? grs & 1
4x ta = out5 << 30
  h = grs if  =
4x ta += out4
  z = m   if !=
  m = ~m
stack_fygy = ta
  grs -= fuv
FVGS6 = stack_FVGS6 
  (int64) h >>= 1
GSFV6 = FVGS6[1,0]
  (int64) grs >>= 1
		 signed<? z - 0
4x ta = int32 uuss1 * int32 FVGS5
  fuv = oldg if  signed<
4x tb = int32 vvrr1 * int32 GSFV5
  grs = h    if !signed<
  m = mnew   if !signed<
4x out6plus = ta + tb
  z = 0
4x ta = int32 uuss0 * int32 FVGS6
  h = grs + fuv
  mnew = m + 18446744073709551615
4x tb = int32 vvrr0 * int32 GSFV6
  oldg = grs
4x out6 = ta + tb
              =? grs & 1
4x out6 += out6plus
  h = grs if  =
  z = m   if !=
4x out6 += carryy
  m = ~m
4x carryz = out6 + _2p63m2p33x4 
  grs -= fuv
  (int64) h >>= 1
4x carryz unsigned>>= 30
  (int64) grs >>= 1
stack_FVGS3 = out5
		 signed<? z - 0
  fuv = oldg if  signed<
FVGS7 = stack_FVGS7 
  grs = h    if !signed<
GSFV7 = FVGS7[1,0]
  m = mnew   if !signed<
4x ta = int32 uuss1 * int32 FVGS6
  z = 0
  h = grs + fuv
4x tb = int32 vvrr1 * int32 GSFV6
  mnew = m + 18446744073709551615
4x out7plus = ta + tb
  oldg = grs
              =? grs & 1
4x ta = int32 uuss0 * int32 FVGS7
  h = grs if  =
4x tb = int32 vvrr0 * int32 GSFV7
  z = m   if !=
  m = ~m
4x out7 = ta + tb
  grs -= fuv
4x out7 += out7plus
  (int64) h >>= 1
4x out7 += carryz
  (int64) grs >>= 1
		 signed<? z - 0
4x carryz = out7 + _2p63m2p33x4 
  fuv = oldg if  signed<
4x carryz unsigned>>= 30
  grs = h    if !signed<
  m = mnew   if !signed<
out6 &= _2p30m1x4
  z = 0
stack_FVGS4 = out6
  h = grs + fuv
  mnew = m + 18446744073709551615
FVGS8 = stack_FVGS8 
  oldg = grs
GSFV8 = FVGS8[1,0]
              =? grs & 1
4x ta = int32 uuss1 * int32 FVGS7
  h = grs if  =
  z = m   if !=
4x tb = int32 vvrr1 * int32 GSFV7
  m = ~m
4x out8plus = ta + tb
  grs -= fuv
  (int64) h >>= 1
4x ta = int32 uuss0 * int32 FVGS8
  (int64) grs >>= 1
4x tb = int32 vvrr0 * int32 GSFV8
		 signed<? z - 0
  fuv = oldg if  signed<
4x out8 = ta + tb
  grs = h    if !signed<
4x out8 += out8plus
  m = mnew   if !signed<
4x out8 += carryz
  z = 0
  h = grs + fuv
4x out8 += out8plus2
  mnew = m + 18446744073709551615
4x carryz = out8 + _2p63m2p33x4 
  oldg = grs
              =? grs & 1
4x carryz unsigned>>= 30
  h = grs if  =
out7 &= _2p30m1x4
  z = m   if !=
  m = ~m
stack_FVGS5 = out7
  grs -= fuv
4x ta = int32 uuss1 * int32 FVGS8
  (int64) h >>= 1
4x tb = int32 vvrr1 * int32 GSFV8
  (int64) grs >>= 1
		 signed<? z - 0
4x out9plus = ta + tb
  fuv = oldg if  signed<
4x out9 += out9plus
  grs = h    if !signed<
  m = mnew   if !signed<
4x out9 += carryz
  z = 0
4x out10 = out9 + _2p63m2p33x4 
  h = grs + fuv
  mnew = m + 18446744073709551615
4x out10 unsigned>>= 30
  oldg = grs
out8 &= _2p30m1x4
              =? grs & 1
stack_FVGS6 = out8
  h = grs if  =
  z = m   if !=
_32767x4 = stack_32767x4
  m = ~m
_2p48x4 = stack_2p48x4
  grs -= fuv
  (int64) h >>= 1
4x carryy = out10 + _2p63m2p33x4
  (int64) grs >>= 1
4x carryy unsigned>>= 15
		 signed<? z - 0
  fuv = oldg if  signed<
4x carryy -= _2p48x4
  grs = h    if !signed<
4x out10 -= stack_2p33x4
  m = mnew   if !signed<
out9 &= _2p30m1x4
extract_init:
  _2p16a2p32 = stack_2p16a2p32
out10 &= _32767x4
  s = grs + _2p16a2p32
4x carryy = int32 carryy * int32 stack_0_19x4
  (int64) s >>= 33
  t2 = g
4x out2 += carryy
  g *= s  
stack_FVGS7 = out9
  v = fuv + _2p16a2p32
  (int64) v >>= 33
stack_FVGS8 = out10
  t2 *= v
stack_FVGS0 = out2
  _2p16 = stack_2p16
  grs += _2p16
  (int64) grs >>= 17
  r = (int16) grs
      rax = f
      rax *= r
  fuv += _2p16
  (int64) fuv >>= 17
  u = (int16) fuv
       f *= u
       f += t2
       g += rax
       (int64) f >>= 15
       (int64) g >>= 15
  inplace stack_vvrr[0] = v
  inplace stack_uuss[0] = u
  inplace stack_uuss[2] = s
  inplace stack_vvrr[2] = r
