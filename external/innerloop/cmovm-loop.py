#!/usr/bin/python3
import sys
import re
from math import log,ceil,floor,sqrt

def innerloop15 () :
    for i in range(15) :
        print('''# Rep #%d
  z = 0
#  m = mnew   if !signed<
  h = grs + fuv
  oldg = grs
              =? grs & 1

  h = grs if  =
  z = m   if !=
  mnew = m + m1
  grs -= fuv

  (int64) h >>= 1
  (int64) grs >>= 1
  m ^= m1
                 signed<? z & z

  fuv = oldg if  signed<
  grs = h    if !signed<
#  z = 0
  m = mnew   if !signed<
#  (int64) grs >>= 1
''' % (i))

#def innerloop15 () :
#    for i in range(15) :
#        print('''# Rep #%d''' % (i))
#        if (i % 3 == 2) :
#            print("  z = 0")
#        else:
#            print("  z = stack_m1[1]")
#        print('''  
#  h = grs + fuv
##''')
#        if False :
#            print("  mnew = stack_m1[0]")
#        else:
#            print("  mnew = -1")
#        print('''  oldg = grs
#              =? grs & 1
#
#  h = grs if  =
#  z = m   if !=
#  mnew ^= m
#  grs -= fuv
#
#  (int64) h >>= 1
#  (int64) grs >>= 1
#  m -= 1
#                 signed<? z - 0
#
#  fuv = oldg if  signed<
#  grs = h    if !signed<
#  m = mnew   if  signed<
##  (int64) grs >>= 1
#''')

 
print('''# Generated by cmovm-loop.py
int64 m
int64 f
int64 g
int64 u
int64 v
int64 r
int64 s
int64 uvrs
int64 fuv
int64 grs
int64 mnew
int64 z
int64 loop
int64 rax
int64 rdx
int64 t0
int64 t1
int64 t2
int64 h
int64 oldg
int64 i
int64 f0
int64 g0
int64 m1

stack64 stack_0

''')

print('''
enter innerloop15x1000
fuv = input_0
grs = input_1
z = 0
stack_0 = z
m = 1
i = 1000
m1 = -1

''')

caller_saved = ["r11","r12","r13","r14","r15","rbx","rbp"]
for s in caller_saved :
    print("stack64 stack_%s\nstack_%s = caller_%s" % (s,s,s))

print("loop1000:")

innerloop15()

print('''
=? i -= 1
goto loop1000 if !=

''')
       
for s in caller_saved :
    print("caller_%s = stack_%s" % (s,s))

print("return")



