FVGS0 = stack_FVGS0
loop20_init:
  fuv = f & ~ _m2p20
new uuss
uuss = u,uuss[1],0,0
uuss = uuss[0],s,0,0
GSFV0 = FVGS0[1,0]
uuss = uuss[0,0,1,1]
vvrr = vvrr[0,0,1,1]
_2p30m1x4 = stack_2p30m1x4
uuss0 = uuss & _2p30m1x4
  grs = g & ~ _m2p20
vvrr0 = vvrr & _2p30m1x4 
_2p63x4 = stack_2p63x4
uuss1 = uuss ^ _2p63x4
vvrr1 = vvrr ^ _2p63x4
  fuv += stack_m2p41
4x uuss1 unsigned>>= 30
4x vvrr1 unsigned>>= 30
_2p33x4 = stack_2p33x4
4x uuss1 -= _2p33x4
  grs += stack_m2p62
4x vvrr1 -= _2p33x4
4x ta = int32 uuss0 * int32 FVGS0
4x tb = int32 vvrr0 * int32 GSFV0
4x out0 = ta + tb
  z = -1
minvx4 = 4x stack_minv
mod0 = stack_mod0
4x d0 = int32 minvx4 * int32 out0
d0 &= _2p30m1x4
  oldg = grs
4x ta = int32 mod0 * int32 d0
4x out0 += ta
4x carryy = out0 +_2p63x4
4x carryy unsigned>>= 30
  h = grs + fuv
FVGS1 = stack_FVGS1
GSFV1 = FVGS1[1,0]
mod1 = stack_mod1
4x ta = int32 uuss1 * int32 FVGS0
              =? grs & 1
4x tb = int32 vvrr1 * int32 GSFV0
4x out1plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS1
4x tb = int32 vvrr0 * int32 GSFV1
  z = m   if !=
4x out1 = ta + tb
4x out1 += out1plus
4x ta = int32 d0 * int32 mod1
4x ta += carryy
  h = grs if  =
4x out1 += ta
4x d1 = int32 minvx4 * int32 out1
d1 &= _2p30m1x4
4x ta = int32 mod0 * int32 d1
  mnew = m + 1
4x out1 += ta
_2p63m2p33x4 = stack_2p63m2p33x4
4x carryy = out1 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  grs -= fuv
FVGS2 = stack_FVGS2
GSFV2 = FVGS2[1,0]
mod2 = stack_mod2
4x ta = int32 uuss1 * int32 FVGS1
  (int64) grs >>= 1
4x tb = int32 vvrr1 * int32 GSFV1
4x out2plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS2
4x tb = int32 vvrr0 * int32 GSFV2
  (int64) h >>= 1
4x out2 = ta + tb
4x out2 += out2plus
4x ta = int32 d0 * int32 mod2
4x tb = int32 d1 * int32 mod1
  m = -m
4x out2plus2 = ta + tb
4x out2plus2 += carryy
4x out2 += out2plus2
4x carryy = out2 + _2p63m2p33x4 
                 signed<? z - 0
4x carryy unsigned>>= 30
out2 &= _2p30m1x4
stack_FVGS0 = out2
FVGS3 = stack_FVGS3
  fuv = oldg if !signed<
GSFV3 = FVGS3[1,0]
mod3 = stack_mod3
4x ta = int32 uuss1 * int32 FVGS2
4x tb = int32 vvrr1 * int32 GSFV2
  grs = h    if  signed<
4x out3plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS3
4x tb = int32 vvrr0 * int32 GSFV3
4x out3 = ta + tb
  m = mnew   if  signed<
4x out3 += out3plus
4x ta = int32 d0 * int32 mod3
4x tb = int32 d1 * int32 mod2
4x out3plus2 = ta + tb
  z = -1
4x out3plus2 += carryy
4x out3 += out3plus2
4x carryy = out3 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  oldg = grs
out3 &= _2p30m1x4
stack_FVGS1 = out3
FVGS4 = stack_FVGS4
GSFV4 = FVGS4[1,0]
  h = grs + fuv
mod4 = stack_mod4
4x ta = int32 uuss1 * int32 FVGS3
4x tb = int32 vvrr1 * int32 GSFV3
4x out4plus = ta + tb
              =? grs & 1
4x ta = int32 uuss0 * int32 FVGS4
4x tb = int32 vvrr0 * int32 GSFV4
4x out4 = ta + tb
4x out4 += out4plus
  z = m   if !=
4x ta = int32 d0 * int32 mod4
4x tb = int32 d1 * int32 mod3
4x out4plus2 = ta + tb
4x out4plus2 += carryy
  h = grs if  =
4x out4 += out4plus2
4x carryy = out4 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out4 &= _2p30m1x4
  mnew = m + 1
stack_FVGS2 = out4
FVGS5 = stack_FVGS5
GSFV5 = FVGS5[1,0]
mod5 = stack_mod5
  grs -= fuv
4x ta = int32 uuss1 * int32 FVGS4
4x tb = int32 vvrr1 * int32 GSFV4
4x out5plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS5
  (int64) grs >>= 1
4x tb = int32 vvrr0 * int32 GSFV5
4x out5 = ta + tb
4x out5 += out5plus
4x ta = int32 d0 * int32 mod5
  (int64) h >>= 1
4x tb = int32 d1 * int32 mod4
4x out5plus2 = ta + tb
4x out5plus2 += carryy
4x out5 += out5plus2
  m = -m
4x carryy = out5 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out5 &= _2p30m1x4
stack_FVGS3 = out5
                 signed<? z - 0
FVGS6 = stack_FVGS6
GSFV6 = FVGS6[1,0]
mod6 = stack_mod6
4x ta = int32 uuss1 * int32 FVGS5
  fuv = oldg if !signed<
4x tb = int32 vvrr1 * int32 GSFV5
4x out6plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS6
4x tb = int32 vvrr0 * int32 GSFV6
  grs = h    if  signed<
4x out6 = ta + tb
4x out6 += out6plus
4x ta = int32 d0 * int32 mod6
4x tb = int32 d1 * int32 mod5
  m = mnew   if  signed<
4x out6plus2 = ta + tb
4x out6plus2 += carryy
4x out6 += out6plus2
4x carryy = out6 + _2p63m2p33x4 
  z = -1
4x carryy unsigned>>= 30
out6 &= _2p30m1x4
stack_FVGS4 = out6
FVGS7 = stack_FVGS7
  oldg = grs
GSFV7 = FVGS7[1,0]
mod7 = stack_mod7
4x ta = int32 uuss1 * int32 FVGS6
4x tb = int32 vvrr1 * int32 GSFV6
  h = grs + fuv
4x out7plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS7
4x tb = int32 vvrr0 * int32 GSFV7
4x out7 = ta + tb
              =? grs & 1
4x out7 += out7plus
4x ta = int32 d0 * int32 mod7
4x tb = int32 d1 * int32 mod6
4x out7plus2 = ta + tb
  z = m   if !=
4x out7plus2 += carryy
4x out7 += out7plus2
4x carryy = out7 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  h = grs if  =
out7 &= _2p30m1x4
stack_FVGS5 = out7
FVGS8 = stack_FVGS8
GSFV8 = FVGS8[1,0]
  mnew = m + 1
mod8 = stack_mod8
4x ta = int32 uuss1 * int32 FVGS7
4x tb = int32 vvrr1 * int32 GSFV7
4x out8plus = ta + tb
  grs -= fuv
4x ta = int32 uuss0 * int32 FVGS8
4x tb = int32 vvrr0 * int32 GSFV8
4x out8 = ta + tb
4x out8 += out8plus
  (int64) grs >>= 1
4x ta = int32 d0 * int32 mod8
4x tb = int32 d1 * int32 mod7
4x out8plus2 = ta + tb
4x out8plus2 += carryy
  (int64) h >>= 1
4x out8 += out8plus2
4x carryy = out8 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out8 &= _2p30m1x4
  m = -m
stack_FVGS6 = out8
FVGS9 = stack_FVGS9
GSFV9 = FVGS9[1,0]
mod9 = stack_mod9
                 signed<? z - 0
4x ta = int32 uuss1 * int32 FVGS8
4x tb = int32 vvrr1 * int32 GSFV8
4x out9plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS9
  fuv = oldg if !signed<
4x tb = int32 vvrr0 * int32 GSFV9
4x out9 = ta + tb
4x out9 += out9plus
4x ta = int32 d0 * int32 mod9
  grs = h    if  signed<
4x tb = int32 d1 * int32 mod8
4x out9plus2 = ta + tb
4x out9plus2 += carryy
4x out9 += out9plus2
  m = mnew   if  signed<
4x carryy = out9 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out9 &= _2p30m1x4
stack_FVGS7 = out9
  z = -1
FVGS10 = stack_FVGS10
GSFV10 = FVGS10[1,0]
mod10 = stack_mod10
4x ta = int32 uuss1 * int32 FVGS9
  oldg = grs
4x tb = int32 vvrr1 * int32 GSFV9
4x out10plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS10
4x tb = int32 vvrr0 * int32 GSFV10
  h = grs + fuv
4x out10 = ta + tb
4x out10 += out10plus
4x ta = int32 d0 * int32 mod10
4x tb = int32 d1 * int32 mod9
              =? grs & 1
4x out10plus2 = ta + tb
4x out10plus2 += carryy
4x out10 += out10plus2
4x carryy = out10 + _2p63m2p33x4 
  z = m   if !=
4x carryy unsigned>>= 30
out10 &= _2p30m1x4
stack_FVGS8 = out10
FVGS11 = stack_FVGS11
  h = grs if  =
GSFV11 = FVGS11[1,0]
mod11 = stack_mod11
4x ta = int32 uuss1 * int32 FVGS10
4x tb = int32 vvrr1 * int32 GSFV10
  mnew = m + 1
4x out11plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS11
4x tb = int32 vvrr0 * int32 GSFV11
4x out11 = ta + tb
  grs -= fuv
4x out11 += out11plus
4x ta = int32 d0 * int32 mod11
4x tb = int32 d1 * int32 mod10
4x out11plus2 = ta + tb
  (int64) grs >>= 1
4x out11plus2 += carryy
4x out11 += out11plus2
4x carryy = out11 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  (int64) h >>= 1
out11 &= _2p30m1x4
stack_FVGS9 = out11
FVGS12 = stack_FVGS12
GSFV12 = FVGS12[1,0]
  m = -m
mod12 = stack_mod12
4x ta = int32 uuss1 * int32 FVGS11
4x tb = int32 vvrr1 * int32 GSFV11
4x out12plus = ta + tb
                 signed<? z - 0
4x ta = int32 uuss0 * int32 FVGS12
4x tb = int32 vvrr0 * int32 GSFV12
4x out12 = ta + tb
4x out12 += out12plus
  fuv = oldg if !signed<
4x ta = int32 d0 * int32 mod12
4x tb = int32 d1 * int32 mod11
4x out12plus2 = ta + tb
4x out12plus2 += carryy
  grs = h    if  signed<
4x out12 += out12plus2
4x carryy = out12 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out12 &= _2p30m1x4
  m = mnew   if  signed<
stack_FVGS10 = out12
FVGS13 = stack_FVGS13
GSFV13 = FVGS13[1,0]
mod13 = stack_mod13
  z = -1
4x ta = int32 uuss1 * int32 FVGS12
4x tb = int32 vvrr1 * int32 GSFV12
4x out13plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS13
  oldg = grs
4x tb = int32 vvrr0 * int32 GSFV13
4x out13 = ta + tb
4x out13 += out13plus
4x ta = int32 d0 * int32 mod13
  h = grs + fuv
4x tb = int32 d1 * int32 mod12
4x out13plus2 = ta + tb
4x out13plus2 += carryy
4x out13 += out13plus2
              =? grs & 1
4x carryy = out13 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out13 &= _2p30m1x4
stack_FVGS11 = out13
  z = m   if !=
FVGS14 = stack_FVGS14
GSFV14 = FVGS14[1,0]
mod14 = stack_mod14
4x ta = int32 uuss1 * int32 FVGS13
  h = grs if  =
4x tb = int32 vvrr1 * int32 GSFV13
4x out14plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS14
4x tb = int32 vvrr0 * int32 GSFV14
  mnew = m + 1
4x out14 = ta + tb
4x out14 += out14plus
4x ta = int32 d0 * int32 mod14
4x tb = int32 d1 * int32 mod13
  grs -= fuv
4x out14plus2 = ta + tb
4x out14plus2 += carryy
4x out14 += out14plus2
4x carryy = out14 + _2p63m2p33x4 
  (int64) grs >>= 1
4x carryy unsigned>>= 30
out14 &= _2p30m1x4
stack_FVGS12 = out14
FVGS15 = stack_FVGS15
  (int64) h >>= 1
GSFV15 = FVGS15[1,0]
mod15 = stack_mod15
4x ta = int32 uuss1 * int32 FVGS14
4x tb = int32 vvrr1 * int32 GSFV14
  m = -m
4x out15plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS15
4x tb = int32 vvrr0 * int32 GSFV15
4x out15 = ta + tb
                 signed<? z - 0
4x out15 += out15plus
4x ta = int32 d0 * int32 mod15
4x tb = int32 d1 * int32 mod14
4x out15plus2 = ta + tb
  fuv = oldg if !signed<
4x out15plus2 += carryy
4x out15 += out15plus2
4x carryy = out15 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  grs = h    if  signed<
out15 &= _2p30m1x4
stack_FVGS13 = out15
FVGS16 = stack_FVGS16
GSFV16 = FVGS16[1,0]
  m = mnew   if  signed<
mod16 = stack_mod16
4x ta = int32 uuss1 * int32 FVGS15
4x tb = int32 vvrr1 * int32 GSFV15
4x out16plus = ta + tb
  z = -1
4x ta = int32 uuss0 * int32 FVGS16
4x tb = int32 vvrr0 * int32 GSFV16
4x out16 = ta + tb
4x out16 += out16plus
  oldg = grs
4x ta = int32 d0 * int32 mod16
4x tb = int32 d1 * int32 mod15
4x out16plus2 = ta + tb
4x out16plus2 += carryy
  h = grs + fuv
4x out16 += out16plus2
4x carryy = out16 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out16 &= _2p30m1x4
              =? grs & 1
stack_FVGS14 = out16
FVGS17 = stack_FVGS17
GSFV17 = FVGS17[1,0]
mod17 = stack_mod17
  z = m   if !=
4x ta = int32 uuss1 * int32 FVGS16
4x tb = int32 vvrr1 * int32 GSFV16
4x out17plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS17
  h = grs if  =
4x tb = int32 vvrr0 * int32 GSFV17
4x out17 = ta + tb
4x out17 += out17plus
4x ta = int32 d0 * int32 mod17
  mnew = m + 1
4x tb = int32 d1 * int32 mod16
4x out17plus2 = ta + tb
4x out17plus2 += carryy
4x out17 += out17plus2
  grs -= fuv
4x carryy = out17 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out17 &= _2p30m1x4
stack_FVGS15 = out17
  (int64) grs >>= 1
FVGS18 = stack_FVGS18
GSFV18 = FVGS18[1,0]
mod18 = stack_mod18
4x ta = int32 uuss1 * int32 FVGS17
  (int64) h >>= 1
4x tb = int32 vvrr1 * int32 GSFV17
4x out18plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS18
4x tb = int32 vvrr0 * int32 GSFV18
  m = -m
4x out18 = ta + tb
4x out18 += out18plus
4x ta = int32 d0 * int32 mod18
4x tb = int32 d1 * int32 mod17
                 signed<? z - 0
4x out18plus2 = ta + tb
4x out18plus2 += carryy
4x out18 += out18plus2
4x carryy = out18 + _2p63m2p33x4 
  fuv = oldg if !signed<
4x carryy unsigned>>= 30
out18 &= _2p30m1x4
stack_FVGS16 = out18
FVGS19 = stack_FVGS19
  grs = h    if  signed<
GSFV19 = FVGS19[1,0]
mod19 = stack_mod19
4x ta = int32 uuss1 * int32 FVGS18
4x tb = int32 vvrr1 * int32 GSFV18
  m = mnew   if  signed<
4x out19plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS19
4x tb = int32 vvrr0 * int32 GSFV19
4x out19 = ta + tb
  z = -1
4x out19 += out19plus
4x ta = int32 d0 * int32 mod19
4x tb = int32 d1 * int32 mod18
4x out19plus2 = ta + tb
  oldg = grs
4x out19plus2 += carryy
4x out19 += out19plus2
4x carryy = out19 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  h = grs + fuv
out19 &= _2p30m1x4
stack_FVGS17 = out19
FVGS20 = stack_FVGS20
GSFV20 = FVGS20[1,0]
              =? grs & 1
mod20 = stack_mod20
4x ta = int32 uuss1 * int32 FVGS19
4x tb = int32 vvrr1 * int32 GSFV19
4x out20plus = ta + tb
  z = m   if !=
4x ta = int32 uuss0 * int32 FVGS20
4x tb = int32 vvrr0 * int32 GSFV20
4x out20 = ta + tb
4x out20 += out20plus
  h = grs if  =
4x ta = int32 d0 * int32 mod20
4x tb = int32 d1 * int32 mod19
4x out20plus2 = ta + tb
4x out20plus2 += carryy
  mnew = m + 1
4x out20 += out20plus2
4x carryy = out20 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out20 &= _2p30m1x4
  grs -= fuv
stack_FVGS18 = out20
FVGS21 = stack_FVGS21
GSFV21 = FVGS21[1,0]
mod21 = stack_mod21
  (int64) grs >>= 1
4x ta = int32 uuss1 * int32 FVGS20
4x tb = int32 vvrr1 * int32 GSFV20
4x out21plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS21
  (int64) h >>= 1
4x tb = int32 vvrr0 * int32 GSFV21
4x out21 = ta + tb
4x out21 += out21plus
4x ta = int32 d0 * int32 mod21
  m = -m
4x tb = int32 d1 * int32 mod20
4x out21plus2 = ta + tb
4x out21plus2 += carryy
4x out21 += out21plus2
                 signed<? z - 0
4x carryy = out21 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out21 &= _2p30m1x4
stack_FVGS19 = out21
  fuv = oldg if !signed<
FVGS22 = stack_FVGS22
GSFV22 = FVGS22[1,0]
mod22 = stack_mod22
4x ta = int32 uuss1 * int32 FVGS21
  grs = h    if  signed<
4x tb = int32 vvrr1 * int32 GSFV21
4x out22plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS22
4x tb = int32 vvrr0 * int32 GSFV22
  m = mnew   if  signed<
4x out22 = ta + tb
4x out22 += out22plus
4x ta = int32 d0 * int32 mod22
4x tb = int32 d1 * int32 mod21
  z = -1
4x out22plus2 = ta + tb
4x out22plus2 += carryy
4x out22 += out22plus2
4x carryy = out22 + _2p63m2p33x4 
  oldg = grs
4x carryy unsigned>>= 30
out22 &= _2p30m1x4
stack_FVGS20 = out22
FVGS23 = stack_FVGS23
  h = grs + fuv
GSFV23 = FVGS23[1,0]
mod23 = stack_mod23
4x ta = int32 uuss1 * int32 FVGS22
4x tb = int32 vvrr1 * int32 GSFV22
              =? grs & 1
4x out23plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS23
4x tb = int32 vvrr0 * int32 GSFV23
4x out23 = ta + tb
  z = m   if !=
4x out23 += out23plus
4x ta = int32 d0 * int32 mod23
4x tb = int32 d1 * int32 mod22
4x out23plus2 = ta + tb
  h = grs if  =
4x out23plus2 += carryy
4x out23 += out23plus2
4x carryy = out23 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  mnew = m + 1
out23 &= _2p30m1x4
stack_FVGS21 = out23
FVGS24 = stack_FVGS24
GSFV24 = FVGS24[1,0]
  grs -= fuv
mod24 = stack_mod24
4x ta = int32 uuss1 * int32 FVGS23
4x tb = int32 vvrr1 * int32 GSFV23
4x out24plus = ta + tb
  (int64) grs >>= 1
4x ta = int32 uuss0 * int32 FVGS24
4x tb = int32 vvrr0 * int32 GSFV24
4x out24 = ta + tb
4x out24 += out24plus
  (int64) h >>= 1
4x ta = int32 d0 * int32 mod24
4x tb = int32 d1 * int32 mod23
4x out24plus2 = ta + tb
4x out24plus2 += carryy
  m = -m
4x out24 += out24plus2
4x carryy = out24 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out24 &= _2p30m1x4
                 signed<? z - 0
stack_FVGS22 = out24
FVGS25 = stack_FVGS25
GSFV25 = FVGS25[1,0]
mod25 = stack_mod25
  fuv = oldg if !signed<
4x ta = int32 uuss1 * int32 FVGS24
4x tb = int32 vvrr1 * int32 GSFV24
4x out25plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS25
  grs = h    if  signed<
4x tb = int32 vvrr0 * int32 GSFV25
4x out25 = ta + tb
4x out25 += out25plus
4x ta = int32 d0 * int32 mod25
  m = mnew   if  signed<
4x tb = int32 d1 * int32 mod24
4x out25plus2 = ta + tb
4x out25plus2 += carryy
4x out25 += out25plus2
  z = -1
4x carryy = out25 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out25 &= _2p30m1x4
stack_FVGS23 = out25
  oldg = grs
FVGS26 = stack_FVGS26
GSFV26 = FVGS26[1,0]
mod26 = stack_mod26
4x ta = int32 uuss1 * int32 FVGS25
  h = grs + fuv
4x tb = int32 vvrr1 * int32 GSFV25
4x out26plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS26
4x tb = int32 vvrr0 * int32 GSFV26
              =? grs & 1
4x out26 = ta + tb
4x out26 += out26plus
4x ta = int32 d0 * int32 mod26
4x tb = int32 d1 * int32 mod25
  z = m   if !=
4x out26plus2 = ta + tb
4x out26plus2 += carryy
4x out26 += out26plus2
4x carryy = out26 + _2p63m2p33x4 
  h = grs if  =
4x carryy unsigned>>= 30
out26 &= _2p30m1x4
stack_FVGS24 = out26
FVGS27 = stack_FVGS27
  mnew = m + 1
GSFV27 = FVGS27[1,0]
mod27 = stack_mod27
4x ta = int32 uuss1 * int32 FVGS26
4x tb = int32 vvrr1 * int32 GSFV26
  grs -= fuv
4x out27plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS27
4x tb = int32 vvrr0 * int32 GSFV27
4x out27 = ta + tb
  (int64) grs >>= 1
4x out27 += out27plus
4x ta = int32 d0 * int32 mod27
4x tb = int32 d1 * int32 mod26
4x out27plus2 = ta + tb
  (int64) h >>= 1
4x out27plus2 += carryy
4x out27 += out27plus2
4x carryy = out27 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  m = -m
out27 &= _2p30m1x4
stack_FVGS25 = out27
FVGS28 = stack_FVGS28
GSFV28 = FVGS28[1,0]
                 signed<? z - 0
mod28 = stack_mod28
4x ta = int32 uuss1 * int32 FVGS27
4x tb = int32 vvrr1 * int32 GSFV27
4x out28plus = ta + tb
  fuv = oldg if !signed<
4x ta = int32 uuss0 * int32 FVGS28
4x tb = int32 vvrr0 * int32 GSFV28
4x out28 = ta + tb
4x out28 += out28plus
  grs = h    if  signed<
4x ta = int32 d0 * int32 mod28
4x tb = int32 d1 * int32 mod27
4x out28plus2 = ta + tb
4x out28plus2 += carryy
  m = mnew   if  signed<
4x out28 += out28plus2
4x carryy = out28 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out28 &= _2p30m1x4
  z = -1
stack_FVGS26 = out28
FVGS29 = stack_FVGS29
GSFV29 = FVGS29[1,0]
mod29 = stack_mod29
  oldg = grs
4x ta = int32 uuss1 * int32 FVGS28
4x tb = int32 vvrr1 * int32 GSFV28
4x out29plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS29
  h = grs + fuv
4x tb = int32 vvrr0 * int32 GSFV29
4x out29 = ta + tb
4x out29 += out29plus
4x ta = int32 d0 * int32 mod29
              =? grs & 1
4x tb = int32 d1 * int32 mod28
4x out29plus2 = ta + tb
4x out29plus2 += carryy
4x out29 += out29plus2
  z = m   if !=
4x carryy = out29 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out29 &= _2p30m1x4
stack_FVGS27 = out29
  h = grs if  =
FVGS30 = stack_FVGS30
GSFV30 = FVGS30[1,0]
mod30 = stack_mod30
4x ta = int32 uuss1 * int32 FVGS29
  mnew = m + 1
4x tb = int32 vvrr1 * int32 GSFV29
4x out30plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS30
4x tb = int32 vvrr0 * int32 GSFV30
  grs -= fuv
4x out30 = ta + tb
4x out30 += out30plus
4x ta = int32 d0 * int32 mod30
4x tb = int32 d1 * int32 mod29
  (int64) grs >>= 1
4x out30plus2 = ta + tb
4x out30plus2 += carryy
4x out30 += out30plus2
4x carryy = out30 + _2p63m2p33x4 
  (int64) h >>= 1
4x carryy unsigned>>= 30
out30 &= _2p30m1x4
stack_FVGS28 = out30
FVGS31 = stack_FVGS31
  m = -m
GSFV31 = FVGS31[1,0]
mod31 = stack_mod31
4x ta = int32 uuss1 * int32 FVGS30
4x tb = int32 vvrr1 * int32 GSFV30
                 signed<? z - 0
4x out31plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS31
4x tb = int32 vvrr0 * int32 GSFV31
4x out31 = ta + tb
  fuv = oldg if !signed<
4x out31 += out31plus
4x ta = int32 d0 * int32 mod31
4x tb = int32 d1 * int32 mod30
4x out31plus2 = ta + tb
  grs = h    if  signed<
4x out31plus2 += carryy
4x out31 += out31plus2
4x carryy = out31 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  m = mnew   if  signed<
out31 &= _2p30m1x4
stack_FVGS29 = out31
FVGS32 = stack_FVGS32
GSFV32 = FVGS32[1,0]
  z = -1
mod32 = stack_mod32
4x ta = int32 uuss1 * int32 FVGS31
4x tb = int32 vvrr1 * int32 GSFV31
4x out32plus = ta + tb
  oldg = grs
4x ta = int32 uuss0 * int32 FVGS32
4x tb = int32 vvrr0 * int32 GSFV32
4x out32 = ta + tb
4x out32 += out32plus
  h = grs + fuv
4x ta = int32 d0 * int32 mod32
4x tb = int32 d1 * int32 mod31
4x out32plus2 = ta + tb
4x out32plus2 += carryy
              =? grs & 1
4x out32 += out32plus2
4x carryy = out32 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out32 &= _2p30m1x4
  z = m   if !=
stack_FVGS30 = out32
FVGS33 = stack_FVGS33
GSFV33 = FVGS33[1,0]
mod33 = stack_mod33
  h = grs if  =
4x ta = int32 uuss1 * int32 FVGS32
4x tb = int32 vvrr1 * int32 GSFV32
4x out33plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS33
  mnew = m + 1
4x tb = int32 vvrr0 * int32 GSFV33
4x out33 = ta + tb
4x out33 += out33plus
4x ta = int32 d0 * int32 mod33
  grs -= fuv
4x tb = int32 d1 * int32 mod32
4x out33plus2 = ta + tb
4x out33plus2 += carryy
4x out33 += out33plus2
  (int64) grs >>= 1
4x carryy = out33 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out33 &= _2p30m1x4
stack_FVGS31 = out33
  (int64) h >>= 1
FVGS34 = stack_FVGS34
GSFV34 = FVGS34[1,0]
mod34 = stack_mod34
4x ta = int32 uuss1 * int32 FVGS33
  m = -m
4x tb = int32 vvrr1 * int32 GSFV33
4x out34plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS34
4x tb = int32 vvrr0 * int32 GSFV34
                 signed<? z - 0
4x out34 = ta + tb
4x out34 += out34plus
4x ta = int32 d0 * int32 mod34
4x tb = int32 d1 * int32 mod33
  fuv = oldg if !signed<
4x out34plus2 = ta + tb
4x out34plus2 += carryy
4x out34 += out34plus2
4x carryy = out34 + _2p63m2p33x4 
  grs = h    if  signed<
4x carryy unsigned>>= 30
out34 &= _2p30m1x4
stack_FVGS32 = out34
FVGS35 = stack_FVGS35
  m = mnew   if  signed<
GSFV35 = FVGS35[1,0]
mod35 = stack_mod35
4x ta = int32 uuss1 * int32 FVGS34
4x tb = int32 vvrr1 * int32 GSFV34
  z = -1
4x out35plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS35
4x tb = int32 vvrr0 * int32 GSFV35
4x out35 = ta + tb
  oldg = grs
4x out35 += out35plus
4x ta = int32 d0 * int32 mod35
4x tb = int32 d1 * int32 mod34
4x out35plus2 = ta + tb
  h = grs + fuv
4x out35plus2 += carryy
4x out35 += out35plus2
4x carryy = out35 + _2p63m2p33x4 
4x carryy unsigned>>= 30
              =? grs & 1
out35 &= _2p30m1x4
stack_FVGS33 = out35
FVGS36 = stack_FVGS36
GSFV36 = FVGS36[1,0]
  z = m   if !=
mod36 = stack_mod36
4x ta = int32 uuss1 * int32 FVGS35
4x tb = int32 vvrr1 * int32 GSFV35
4x out36plus = ta + tb
  h = grs if  =
4x ta = int32 uuss0 * int32 FVGS36
4x tb = int32 vvrr0 * int32 GSFV36
4x out36 = ta + tb
4x out36 += out36plus
  mnew = m + 1
4x ta = int32 d0 * int32 mod36
4x tb = int32 d1 * int32 mod35
4x out36plus2 = ta + tb
4x out36plus2 += carryy
  grs -= fuv
4x out36 += out36plus2
4x carryy = out36 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out36 &= _2p30m1x4
  (int64) grs >>= 1
stack_FVGS34 = out36
FVGS37 = stack_FVGS37
GSFV37 = FVGS37[1,0]
mod37 = stack_mod37
  (int64) h >>= 1
4x ta = int32 uuss1 * int32 FVGS36
4x tb = int32 vvrr1 * int32 GSFV36
4x out37plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS37
  m = -m
4x tb = int32 vvrr0 * int32 GSFV37
4x out37 = ta + tb
4x out37 += out37plus
4x ta = int32 d0 * int32 mod37
                 signed<? z - 0
4x tb = int32 d1 * int32 mod36
4x out37plus2 = ta + tb
4x out37plus2 += carryy
4x out37 += out37plus2
  fuv = oldg if !signed<
4x carryy = out37 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out37 &= _2p30m1x4
stack_FVGS35 = out37
  grs = h    if  signed<
FVGS38 = stack_FVGS38
GSFV38 = FVGS38[1,0]
mod38 = stack_mod38
4x ta = int32 uuss1 * int32 FVGS37
  m = mnew   if  signed<
4x tb = int32 vvrr1 * int32 GSFV37
4x out38plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS38
4x tb = int32 vvrr0 * int32 GSFV38
  z = -1
4x out38 = ta + tb
4x out38 += out38plus
4x ta = int32 d0 * int32 mod38
4x tb = int32 d1 * int32 mod37
  oldg = grs
4x out38plus2 = ta + tb
4x out38plus2 += carryy
4x out38 += out38plus2
4x carryy = out38 + _2p63m2p33x4 
  h = grs + fuv
4x carryy unsigned>>= 30
out38 &= _2p30m1x4
stack_FVGS36 = out38
FVGS39 = stack_FVGS39
              =? grs & 1
GSFV39 = FVGS39[1,0]
mod39 = stack_mod39
4x ta = int32 uuss1 * int32 FVGS38
4x tb = int32 vvrr1 * int32 GSFV38
  z = m   if !=
4x out39plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS39
4x tb = int32 vvrr0 * int32 GSFV39
4x out39 = ta + tb
  h = grs if  =
4x out39 += out39plus
4x ta = int32 d0 * int32 mod39
4x tb = int32 d1 * int32 mod38
4x out39plus2 = ta + tb
  mnew = m + 1
4x out39plus2 += carryy
4x out39 += out39plus2
4x carryy = out39 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  grs -= fuv
out39 &= _2p30m1x4
stack_FVGS37 = out39
FVGS40 = stack_FVGS40
GSFV40 = FVGS40[1,0]
  (int64) grs >>= 1
mod40 = stack_mod40
4x ta = int32 uuss1 * int32 FVGS39
4x tb = int32 vvrr1 * int32 GSFV39
4x out40plus = ta + tb
  (int64) h >>= 1
4x ta = int32 uuss0 * int32 FVGS40
4x tb = int32 vvrr0 * int32 GSFV40
4x out40 = ta + tb
4x out40 += out40plus
  m = -m
4x ta = int32 d0 * int32 mod40
4x tb = int32 d1 * int32 mod39
4x out40plus2 = ta + tb
4x out40plus2 += carryy
                 signed<? z - 0
4x out40 += out40plus2
4x carryy = out40 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out40 &= _2p30m1x4
  fuv = oldg if !signed<
stack_FVGS38 = out40
FVGS41 = stack_FVGS41
GSFV41 = FVGS41[1,0]
mod41 = stack_mod41
  grs = h    if  signed<
4x ta = int32 uuss1 * int32 FVGS40
4x tb = int32 vvrr1 * int32 GSFV40
4x out41plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS41
  m = mnew   if  signed<
4x tb = int32 vvrr0 * int32 GSFV41
4x out41 = ta + tb
4x out41 += out41plus
4x ta = int32 d0 * int32 mod41
  z = -1
4x tb = int32 d1 * int32 mod40
4x out41plus2 = ta + tb
4x out41plus2 += carryy
4x out41 += out41plus2
  oldg = grs
4x carryy = out41 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out41 &= _2p30m1x4
stack_FVGS39 = out41
  h = grs + fuv
FVGS42 = stack_FVGS42
GSFV42 = FVGS42[1,0]
mod42 = stack_mod42
4x ta = int32 uuss1 * int32 FVGS41
              =? grs & 1
4x tb = int32 vvrr1 * int32 GSFV41
4x out42plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS42
4x tb = int32 vvrr0 * int32 GSFV42
  z = m   if !=
4x out42 = ta + tb
4x out42 += out42plus
4x ta = int32 d0 * int32 mod42
4x tb = int32 d1 * int32 mod41
  h = grs if  =
4x out42plus2 = ta + tb
4x out42plus2 += carryy
4x out42 += out42plus2
4x carryy = out42 + _2p63m2p33x4 
  mnew = m + 1
4x carryy unsigned>>= 30
out42 &= _2p30m1x4
stack_FVGS40 = out42
FVGS43 = stack_FVGS43
  grs -= fuv
GSFV43 = FVGS43[1,0]
mod43 = stack_mod43
4x ta = int32 uuss1 * int32 FVGS42
4x tb = int32 vvrr1 * int32 GSFV42
  (int64) grs >>= 1
4x out43plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS43
4x tb = int32 vvrr0 * int32 GSFV43
4x out43 = ta + tb
  (int64) h >>= 1
4x out43 += out43plus
4x ta = int32 d0 * int32 mod43
4x tb = int32 d1 * int32 mod42
4x out43plus2 = ta + tb
  m = -m
4x out43plus2 += carryy
4x out43 += out43plus2
4x carryy = out43 + _2p63m2p33x4 
4x carryy unsigned>>= 30
                 signed<? z - 0
out43 &= _2p30m1x4
stack_FVGS41 = out43
FVGS44 = stack_FVGS44
GSFV44 = FVGS44[1,0]
  fuv = oldg if !signed<
mod44 = stack_mod44
4x ta = int32 uuss1 * int32 FVGS43
4x tb = int32 vvrr1 * int32 GSFV43
4x out44plus = ta + tb
  grs = h    if  signed<
4x ta = int32 uuss0 * int32 FVGS44
4x tb = int32 vvrr0 * int32 GSFV44
4x out44 = ta + tb
4x out44 += out44plus
  m = mnew   if  signed<
4x ta = int32 d0 * int32 mod44
4x tb = int32 d1 * int32 mod43
4x out44plus2 = ta + tb
4x out44plus2 += carryy
  z = -1
4x out44 += out44plus2
4x carryy = out44 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out44 &= _2p30m1x4
  oldg = grs
stack_FVGS42 = out44
FVGS45 = stack_FVGS45
GSFV45 = FVGS45[1,0]
mod45 = stack_mod45
  h = grs + fuv
4x ta = int32 uuss1 * int32 FVGS44
4x tb = int32 vvrr1 * int32 GSFV44
4x out45plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS45
              =? grs & 1
4x tb = int32 vvrr0 * int32 GSFV45
4x out45 = ta + tb
4x out45 += out45plus
4x ta = int32 d0 * int32 mod45
  z = m   if !=
4x tb = int32 d1 * int32 mod44
4x out45plus2 = ta + tb
4x out45plus2 += carryy
4x out45 += out45plus2
  h = grs if  =
4x carryy = out45 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out45 &= _2p30m1x4
stack_FVGS43 = out45
  mnew = m + 1
FVGS46 = stack_FVGS46
GSFV46 = FVGS46[1,0]
mod46 = stack_mod46
4x ta = int32 uuss1 * int32 FVGS45
  grs -= fuv
4x tb = int32 vvrr1 * int32 GSFV45
4x out46plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS46
4x tb = int32 vvrr0 * int32 GSFV46
  (int64) grs >>= 1
4x out46 = ta + tb
4x out46 += out46plus
4x ta = int32 d0 * int32 mod46
4x tb = int32 d1 * int32 mod45
  (int64) h >>= 1
4x out46plus2 = ta + tb
4x out46plus2 += carryy
4x out46 += out46plus2
4x carryy = out46 + _2p63m2p33x4 
  m = -m
4x carryy unsigned>>= 30
out46 &= _2p30m1x4
stack_FVGS44 = out46
FVGS47 = stack_FVGS47
                 signed<? z - 0
GSFV47 = FVGS47[1,0]
mod47 = stack_mod47
4x ta = int32 uuss1 * int32 FVGS46
4x tb = int32 vvrr1 * int32 GSFV46
  fuv = oldg if !signed<
4x out47plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS47
4x tb = int32 vvrr0 * int32 GSFV47
4x out47 = ta + tb
  grs = h    if  signed<
4x out47 += out47plus
4x ta = int32 d0 * int32 mod47
4x tb = int32 d1 * int32 mod46
4x out47plus2 = ta + tb
  m = mnew   if  signed<
4x out47plus2 += carryy
4x out47 += out47plus2
4x carryy = out47 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  z = -1
out47 &= _2p30m1x4
stack_FVGS45 = out47
FVGS48 = stack_FVGS48
GSFV48 = FVGS48[1,0]
  oldg = grs
mod48 = stack_mod48
4x ta = int32 uuss1 * int32 FVGS47
4x tb = int32 vvrr1 * int32 GSFV47
4x out48plus = ta + tb
  h = grs + fuv
4x ta = int32 uuss0 * int32 FVGS48
4x tb = int32 vvrr0 * int32 GSFV48
4x out48 = ta + tb
4x out48 += out48plus
              =? grs & 1
4x ta = int32 d0 * int32 mod48
4x tb = int32 d1 * int32 mod47
4x out48plus2 = ta + tb
4x out48plus2 += carryy
  z = m   if !=
4x out48 += out48plus2
4x carryy = out48 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out48 &= _2p30m1x4
  h = grs if  =
stack_FVGS46 = out48
FVGS49 = stack_FVGS49
GSFV49 = FVGS49[1,0]
mod49 = stack_mod49
  mnew = m + 1
4x ta = int32 uuss1 * int32 FVGS48
4x tb = int32 vvrr1 * int32 GSFV48
4x out49plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS49
  grs -= fuv
4x tb = int32 vvrr0 * int32 GSFV49
4x out49 = ta + tb
4x out49 += out49plus
4x ta = int32 d0 * int32 mod49
  (int64) grs >>= 1
4x tb = int32 d1 * int32 mod48
4x out49plus2 = ta + tb
4x out49plus2 += carryy
4x out49 += out49plus2
  (int64) h >>= 1
4x carryy = out49 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out49 &= _2p30m1x4
stack_FVGS47 = out49
  m = -m
FVGS50 = stack_FVGS50
GSFV50 = FVGS50[1,0]
mod50 = stack_mod50
4x ta = int32 uuss1 * int32 FVGS49
                 signed<? z - 0
4x tb = int32 vvrr1 * int32 GSFV49
4x out50plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS50
4x tb = int32 vvrr0 * int32 GSFV50
  fuv = oldg if !signed<
4x out50 = ta + tb
4x out50 += out50plus
4x ta = int32 d0 * int32 mod50
4x tb = int32 d1 * int32 mod49
  grs = h    if  signed<
4x out50plus2 = ta + tb
4x out50plus2 += carryy
4x out50 += out50plus2
4x carryy = out50 + _2p63m2p33x4 
  m = mnew   if  signed<
4x carryy unsigned>>= 30
out50 &= _2p30m1x4
stack_FVGS48 = out50
FVGS51 = stack_FVGS51
  z = -1
GSFV51 = FVGS51[1,0]
mod51 = stack_mod51
4x ta = int32 uuss1 * int32 FVGS50
4x tb = int32 vvrr1 * int32 GSFV50
  oldg = grs
4x out51plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS51
4x tb = int32 vvrr0 * int32 GSFV51
4x out51 = ta + tb
  h = grs + fuv
4x out51 += out51plus
4x ta = int32 d0 * int32 mod51
4x tb = int32 d1 * int32 mod50
4x out51plus2 = ta + tb
              =? grs & 1
4x out51plus2 += carryy
4x out51 += out51plus2
4x carryy = out51 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  z = m   if !=
out51 &= _2p30m1x4
stack_FVGS49 = out51
FVGS52 = stack_FVGS52
GSFV52 = FVGS52[1,0]
  h = grs if  =
mod52 = stack_mod52
4x ta = int32 uuss1 * int32 FVGS51
4x tb = int32 vvrr1 * int32 GSFV51
4x out52plus = ta + tb
  mnew = m + 1
4x ta = int32 uuss0 * int32 FVGS52
4x tb = int32 vvrr0 * int32 GSFV52
4x out52 = ta + tb
4x out52 += out52plus
  grs -= fuv
4x ta = int32 d0 * int32 mod52
4x tb = int32 d1 * int32 mod51
4x out52plus2 = ta + tb
4x out52plus2 += carryy
  (int64) grs >>= 1
4x out52 += out52plus2
4x carryy = out52 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out52 &= _2p30m1x4
  (int64) h >>= 1
stack_FVGS50 = out52
FVGS53 = stack_FVGS53
GSFV53 = FVGS53[1,0]
mod53 = stack_mod53
  m = -m
4x ta = int32 uuss1 * int32 FVGS52
4x tb = int32 vvrr1 * int32 GSFV52
4x out53plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS53
                 signed<? z - 0
4x tb = int32 vvrr0 * int32 GSFV53
4x out53 = ta + tb
4x out53 += out53plus
4x ta = int32 d0 * int32 mod53
  fuv = oldg if !signed<
4x tb = int32 d1 * int32 mod52
4x out53plus2 = ta + tb
4x out53plus2 += carryy
4x out53 += out53plus2
  grs = h    if  signed<
4x carryy = out53 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out53 &= _2p30m1x4
stack_FVGS51 = out53
  m = mnew   if  signed<
FVGS54 = stack_FVGS54
GSFV54 = FVGS54[1,0]
mod54 = stack_mod54
4x ta = int32 uuss1 * int32 FVGS53
  z = -1
4x tb = int32 vvrr1 * int32 GSFV53
4x out54plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS54
4x tb = int32 vvrr0 * int32 GSFV54
  oldg = grs
4x out54 = ta + tb
4x out54 += out54plus
4x ta = int32 d0 * int32 mod54
4x tb = int32 d1 * int32 mod53
  h = grs + fuv
4x out54plus2 = ta + tb
4x out54plus2 += carryy
4x out54 += out54plus2
4x carryy = out54 + _2p63m2p33x4 
              =? grs & 1
4x carryy unsigned>>= 30
out54 &= _2p30m1x4
stack_FVGS52 = out54
FVGS55 = stack_FVGS55
  z = m   if !=
GSFV55 = FVGS55[1,0]
mod55 = stack_mod55
4x ta = int32 uuss1 * int32 FVGS54
4x tb = int32 vvrr1 * int32 GSFV54
  h = grs if  =
4x out55plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS55
4x tb = int32 vvrr0 * int32 GSFV55
4x out55 = ta + tb
  mnew = m + 1
4x out55 += out55plus
4x ta = int32 d0 * int32 mod55
4x tb = int32 d1 * int32 mod54
4x out55plus2 = ta + tb
  grs -= fuv
4x out55plus2 += carryy
4x out55 += out55plus2
4x carryy = out55 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  (int64) grs >>= 1
out55 &= _2p30m1x4
stack_FVGS53 = out55
FVGS56 = stack_FVGS56
GSFV56 = FVGS56[1,0]
  (int64) h >>= 1
mod56 = stack_mod56
4x ta = int32 uuss1 * int32 FVGS55
4x tb = int32 vvrr1 * int32 GSFV55
4x out56plus = ta + tb
  m = -m
4x ta = int32 uuss0 * int32 FVGS56
4x tb = int32 vvrr0 * int32 GSFV56
4x out56 = ta + tb
4x out56 += out56plus
                 signed<? z - 0
4x ta = int32 d0 * int32 mod56
4x tb = int32 d1 * int32 mod55
4x out56plus2 = ta + tb
4x out56plus2 += carryy
  fuv = oldg if !signed<
4x out56 += out56plus2
4x carryy = out56 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out56 &= _2p30m1x4
  grs = h    if  signed<
stack_FVGS54 = out56
FVGS57 = stack_FVGS57
GSFV57 = FVGS57[1,0]
mod57 = stack_mod57
  m = mnew   if  signed<
4x ta = int32 uuss1 * int32 FVGS56
4x tb = int32 vvrr1 * int32 GSFV56
4x out57plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS57
  z = -1
4x tb = int32 vvrr0 * int32 GSFV57
4x out57 = ta + tb
4x out57 += out57plus
4x ta = int32 d0 * int32 mod57
  oldg = grs
4x tb = int32 d1 * int32 mod56
4x out57plus2 = ta + tb
4x out57plus2 += carryy
4x out57 += out57plus2
  h = grs + fuv
4x carryy = out57 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out57 &= _2p30m1x4
stack_FVGS55 = out57
              =? grs & 1
FVGS58 = stack_FVGS58
GSFV58 = FVGS58[1,0]
mod58 = stack_mod58
4x ta = int32 uuss1 * int32 FVGS57
  z = m   if !=
4x tb = int32 vvrr1 * int32 GSFV57
4x out58plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS58
4x tb = int32 vvrr0 * int32 GSFV58
  h = grs if  =
4x out58 = ta + tb
4x out58 += out58plus
4x ta = int32 d0 * int32 mod58
4x tb = int32 d1 * int32 mod57
  mnew = m + 1
4x out58plus2 = ta + tb
4x out58plus2 += carryy
4x out58 += out58plus2
4x carryy = out58 + _2p63m2p33x4 
  grs -= fuv
4x carryy unsigned>>= 30
out58 &= _2p30m1x4
stack_FVGS56 = out58
FVGS59 = stack_FVGS59
  (int64) grs >>= 1
GSFV59 = FVGS59[1,0]
mod59 = stack_mod59
4x ta = int32 uuss1 * int32 FVGS58
4x tb = int32 vvrr1 * int32 GSFV58
  (int64) h >>= 1
4x out59plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS59
4x tb = int32 vvrr0 * int32 GSFV59
4x out59 = ta + tb
  m = -m
4x out59 += out59plus
4x ta = int32 d0 * int32 mod59
4x tb = int32 d1 * int32 mod58
4x out59plus2 = ta + tb
                 signed<? z - 0
4x out59plus2 += carryy
4x out59 += out59plus2
4x carryy = out59 + _2p63m2p33x4 
4x carryy unsigned>>= 30
  fuv = oldg if !signed<
out59 &= _2p30m1x4
stack_FVGS57 = out59
FVGS60 = stack_FVGS60
GSFV60 = FVGS60[1,0]
  grs = h    if  signed<
mod60 = stack_mod60
4x ta = int32 uuss1 * int32 FVGS59
4x tb = int32 vvrr1 * int32 GSFV59
4x out60plus = ta + tb
  m = mnew   if  signed<
4x ta = int32 uuss0 * int32 FVGS60
4x tb = int32 vvrr0 * int32 GSFV60
4x out60 = ta + tb
4x out60 += out60plus
  z = -1
4x ta = int32 d0 * int32 mod60
4x tb = int32 d1 * int32 mod59
4x out60plus2 = ta + tb
4x out60plus2 += carryy
  oldg = grs
4x out60 += out60plus2
4x carryy = out60 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out60 &= _2p30m1x4
  h = grs + fuv
stack_FVGS58 = out60
FVGS61 = stack_FVGS61
GSFV61 = FVGS61[1,0]
mod61 = stack_mod61
              =? grs & 1
4x ta = int32 uuss1 * int32 FVGS60
4x tb = int32 vvrr1 * int32 GSFV60
4x out61plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS61
  z = m   if !=
4x tb = int32 vvrr0 * int32 GSFV61
4x out61 = ta + tb
4x out61 += out61plus
4x ta = int32 d0 * int32 mod61
  h = grs if  =
4x tb = int32 d1 * int32 mod60
4x out61plus2 = ta + tb
4x out61plus2 += carryy
4x out61 += out61plus2
  mnew = m + 1
4x carryy = out61 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out61 &= _2p30m1x4
stack_FVGS59 = out61
  grs -= fuv
FVGS62 = stack_FVGS62
GSFV62 = FVGS62[1,0]
mod62 = stack_mod62
4x ta = int32 uuss1 * int32 FVGS61
  (int64) grs >>= 1
4x tb = int32 vvrr1 * int32 GSFV61
4x out62plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS62
4x tb = int32 vvrr0 * int32 GSFV62
  (int64) h >>= 1
4x out62 = ta + tb
4x out62 += out62plus
4x ta = int32 d0 * int32 mod62
4x tb = int32 d1 * int32 mod61
  m = -m
4x out62plus2 = ta + tb
4x out62plus2 += carryy
4x out62 += out62plus2
4x carryy = out62 + _2p63m2p33x4 
                 signed<? z - 0
4x carryy unsigned>>= 30
out62 &= _2p30m1x4
stack_FVGS60 = out62
FVGS63 = stack_FVGS63
  fuv = oldg if !signed<
GSFV63 = FVGS63[1,0]
mod63 = stack_mod63
4x ta = int32 uuss1 * int32 FVGS62
4x tb = int32 vvrr1 * int32 GSFV62
  grs = h    if  signed<
4x out63plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS63
4x tb = int32 vvrr0 * int32 GSFV63
4x out63 = ta + tb
  m = mnew   if  signed<
4x out63 += out63plus
4x ta = int32 d0 * int32 mod63
4x tb = int32 d1 * int32 mod62
4x out63plus2 = ta + tb
extract_init:
  _2p20a2p41 = stack_2p20a2p41
4x out63plus2 += carryy
4x out63 += out63plus2
4x carryy = out63 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out63 &= _2p30m1x4
stack_FVGS61 = out63
FVGS64 = stack_FVGS64
GSFV64 = FVGS64[1,0]
  s = grs + _2p20a2p41
mod64 = stack_mod64
4x ta = int32 uuss1 * int32 FVGS63
4x tb = int32 vvrr1 * int32 GSFV63
4x out64plus = ta + tb
  (int64) s >>= 42
4x ta = int32 uuss0 * int32 FVGS64
4x tb = int32 vvrr0 * int32 GSFV64
4x out64 = ta + tb
4x out64 += out64plus
  t2 = g
4x ta = int32 d0 * int32 mod64
4x tb = int32 d1 * int32 mod63
4x out64plus2 = ta + tb
4x out64plus2 += carryy
  g *= s  
4x out64 += out64plus2
4x carryy = out64 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out64 &= _2p30m1x4
  v = fuv + _2p20a2p41
stack_FVGS62 = out64
FVGS65 = stack_FVGS65
GSFV65 = FVGS65[1,0]
mod65 = stack_mod65
  (int64) v >>= 42
4x ta = int32 uuss1 * int32 FVGS64
4x tb = int32 vvrr1 * int32 GSFV64
4x out65plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS65
  t2 *= v
4x tb = int32 vvrr0 * int32 GSFV65
4x out65 = ta + tb
4x out65 += out65plus
4x ta = int32 d0 * int32 mod65
  _2p20 = stack_2p20
4x tb = int32 d1 * int32 mod64
4x out65plus2 = ta + tb
4x out65plus2 += carryy
4x out65 += out65plus2
  r = grs + _2p20
4x carryy = out65 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out65 &= _2p30m1x4
stack_FVGS63 = out65
  r <<= 22
FVGS66 = stack_FVGS66
GSFV66 = FVGS66[1,0]
mod66 = stack_mod66
4x ta = int32 uuss1 * int32 FVGS65
  (int64) r >>= 43
4x tb = int32 vvrr1 * int32 GSFV65
4x out66plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS66
4x tb = int32 vvrr0 * int32 GSFV66
      rax = f
4x out66 = ta + tb
4x out66 += out66plus
4x ta = int32 d0 * int32 mod66
4x tb = int32 d1 * int32 mod65
      rax *= r
4x out66plus2 = ta + tb
4x out66plus2 += carryy
4x out66 += out66plus2
4x carryy = out66 + _2p63m2p33x4 
  u = fuv + _2p20
4x carryy unsigned>>= 30
out66 &= _2p30m1x4
stack_FVGS64 = out66
FVGS67 = stack_FVGS67
  u <<= 22
GSFV67 = FVGS67[1,0]
mod67 = stack_mod67
4x ta = int32 uuss1 * int32 FVGS66
4x tb = int32 vvrr1 * int32 GSFV66
  (int64) u >>= 43
4x out67plus = ta + tb
4x ta = int32 uuss0 * int32 FVGS67
4x tb = int32 vvrr0 * int32 GSFV67
4x out67 = ta + tb
       f *= u
4x out67 += out67plus
4x ta = int32 d0 * int32 mod67
4x tb = int32 d1 * int32 mod66
4x out67plus2 = ta + tb
       f += t2
4x out67plus2 += carryy
4x out67 += out67plus2
4x carryy = out67 + _2p63m2p33x4 
4x carryy unsigned>>= 30
       g += rax
out67 &= _2p30m1x4
stack_FVGS65 = out67
FVGS68 = stack_FVGS68
GSFV68 = FVGS68[1,0]
  (int64) f >>= 20
mod68 = stack_mod68
4x ta = int32 uuss1 * int32 FVGS67
4x tb = int32 vvrr1 * int32 GSFV67
4x out68plus = ta + tb
  (int64) g >>= 20
4x ta = int32 uuss0 * int32 FVGS68
4x tb = int32 vvrr0 * int32 GSFV68
4x out68 = ta + tb
4x out68 += out68plus
  inplace stack_vvrr[0] = v
4x ta = int32 d0 * int32 mod68
4x tb = int32 d1 * int32 mod67
4x out68plus2 = ta + tb
4x out68plus2 += carryy
  inplace stack_uuss[0] = u
4x out68 += out68plus2
4x carryy = out68 + _2p63m2p33x4 
4x carryy unsigned>>= 30
out68 &= _2p30m1x4
  inplace stack_uuss[2] = s
stack_FVGS66 = out68
_2p33x4 = stack_2p33x4
4x ta = int32 uuss1 * int32 FVGS68
4x tb = int32 vvrr1 * int32 GSFV68
  inplace stack_vvrr[2] = r
4x out69plus = ta + tb
4x ta = int32 mod68 * int32 d1
4x out69 = ta + carryy
4x out69 += out69plus
  loop = 2
4x out70 = out69 + _2p63m2p33x4
4x out70 unsigned >>= 30
4x out70 -= _2p33x4
out69 &= _2p30m1x4
stack_FVGS67 = out69
stack_FVGS68 = out70
