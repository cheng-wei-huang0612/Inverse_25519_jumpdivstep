
loop15_init:

  fuv = f & ~ _m2p15
  grs = g & ~ _m2p15
  fuv |= stack_m2p32
  grs |= stack_m2p48

# Rep #0
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #1
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #2
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #3
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #4
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #5
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #6
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #7
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #8
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #9
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #10
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #11
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #12
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #13
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1

# Rep #14
  z = 0
  oldg = grs
  h = grs + fuv
              =? grs & 1

  z = m   if !=
  h = grs if  =
  mnew = m - 1
  grs -= fuv

  #(int64) grs >>= 1
  #(int64) h >>= 1
  m = ~m
                 signed<? z - 0

  fuv = oldg if  signed<
  grs = h    if !signed<
  m = mnew   if !signed<
  (int64) grs >>= 1


# extract u,v,r,s
extract_init:

  _2p16a2p32 = stack_2p16a2p32
  s = grs + _2p16a2p32
  (int64) s >>= 33

  t2 = g
  g *= s  
  # g = gs

  v = fuv + _2p16a2p32
  (int64) v >>= 33
  t2 *= v
  # t2 = gv

  _2p16 = stack_2p16
  grs += _2p16
  (int64) grs >>= 17
  r = (int16) grs

      rax = f
      rax *= r
      # rax = fr

  fuv += _2p16
  (int64) fuv >>= 17
  u = (int16) fuv

       f *= u
       f += t2
       g += rax
 
       (int64) f >>= 15
       (int64) g >>= 15

  inplace stack_vvrr[0] = v
  inplace stack_uuss[0] = u
  inplace stack_uuss[2] = s
  inplace stack_vvrr[2] = r
